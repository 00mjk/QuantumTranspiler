OPENQASM 2.0;
include "qelib1.inc";
qreg up[4];
qreg down[2];
qreg aux[4];
creg m[4];
u2(0,pi) up[0];
u2(0,pi) up[1];
u2(0,pi) up[2];
u2(0,pi) up[3];
u3(pi,0,pi) down[0];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(0) down[0],up[0],aux[0];
mcu1(pi) down[0],up[0],aux[1];
mcu1(pi/2) down[0],up[0],aux[2];
u1(-pi) aux[0];
h aux[0];
u1(-3*pi/2) aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(-3*pi/4) aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
cx aux[2],aux[3];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
u1(pi/2) aux[3];
cx aux[3],aux[0];
u1(-pi/2) aux[0];
cx aux[3],aux[0];
u1(pi/2) aux[0];
mcu1(0) down[0],up[0],aux[0];
h aux[0];
u1(3*pi/4) aux[3];
cx aux[3],aux[1];
u1(-3*pi/4) aux[1];
cx aux[3],aux[1];
u1(3*pi/4) aux[1];
mcu1(-pi) down[0],up[0],aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(3*pi/8) aux[3];
cx aux[3],aux[2];
u1(-3*pi/8) aux[2];
cx aux[3],aux[2];
u1(3*pi/8) aux[2];
mcu1(-pi/2) down[0],up[0],aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
u3(pi,0,pi) aux[2];
cx aux[2],aux[3];
u3(pi,0,pi) aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(0) down[0],up[0],aux[0];
mcu1(pi) down[0],up[0],aux[1];
mcu1(pi/2) down[0],up[0],aux[2];
mcu1(pi) down[1],up[0],aux[0];
mcu1(pi/2) down[1],up[0],aux[1];
mcu1(pi/4) down[1],up[0],aux[2];
u1(-pi) aux[0];
h aux[0];
u1(-3*pi/2) aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(-3*pi/4) aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
cx aux[2],aux[3];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
u1(pi/2) aux[3];
cx aux[3],aux[0];
u1(-pi/2) aux[0];
cx aux[3],aux[0];
u1(pi/2) aux[0];
mcu1(-pi) down[1],up[0],aux[0];
h aux[0];
u1(3*pi/4) aux[3];
cx aux[3],aux[1];
u1(-3*pi/4) aux[1];
cx aux[3],aux[1];
u1(3*pi/4) aux[1];
mcu1(-pi/2) down[1],up[0],aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(3*pi/8) aux[3];
cx aux[3],aux[2];
u1(-3*pi/8) aux[2];
cx aux[3],aux[2];
u1(3*pi/8) aux[2];
mcu1(-pi/4) down[1],up[0],aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
u3(pi,0,pi) aux[2];
cx aux[2],aux[3];
u3(pi,0,pi) aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(pi) down[1],up[0],aux[0];
mcu1(pi/2) down[1],up[0],aux[1];
mcu1(pi/4) down[1],up[0],aux[2];
h aux[0];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
h aux[2];
cswap up[0],down[0],aux[0];
cswap up[0],down[1],aux[1];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(-pi) down[1],up[0],aux[0];
mcu1(-pi/2) down[1],up[0],aux[1];
mcu1(-pi/4) down[1],up[0],aux[2];
h aux[0];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
u3(pi,0,pi) aux[2];
cx aux[2],aux[3];
u3(pi,0,pi) aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(pi) down[1],up[0],aux[0];
mcu1(pi/2) down[1],up[0],aux[1];
mcu1(pi/4) down[1],up[0],aux[2];
u1(-pi/2) aux[3];
cx aux[3],aux[0];
u1(pi/2) aux[0];
cx aux[3],aux[0];
u1(-pi/2) aux[0];
h aux[0];
u1(-3*pi/4) aux[3];
cx aux[3],aux[1];
u1(3*pi/4) aux[1];
cx aux[3],aux[1];
u1(-3*pi/4) aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(-3*pi/8) aux[3];
cx aux[3],aux[2];
u1(3*pi/8) aux[2];
cx aux[3],aux[2];
u1(-3*pi/8) aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
cx aux[2],aux[3];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
u1(pi) aux[0];
mcu1(-pi) down[1],up[0],aux[0];
u1(3*pi/2) aux[1];
mcu1(-pi/2) down[1],up[0],aux[1];
u1(3*pi/4) aux[2];
mcu1(-pi/4) down[1],up[0],aux[2];
mcu1(0) down[0],up[0],aux[0];
mcu1(-pi) down[0],up[0],aux[1];
mcu1(-pi/2) down[0],up[0],aux[2];
h aux[0];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
u3(pi,0,pi) aux[2];
cx aux[2],aux[3];
u3(pi,0,pi) aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(0) down[0],up[0],aux[0];
mcu1(pi) down[0],up[0],aux[1];
mcu1(pi/2) down[0],up[0],aux[2];
u1(-pi/2) aux[3];
cx aux[3],aux[0];
u1(pi/2) aux[0];
cx aux[3],aux[0];
u1(-pi/2) aux[0];
h aux[0];
u1(-3*pi/4) aux[3];
cx aux[3],aux[1];
u1(3*pi/4) aux[1];
cx aux[3],aux[1];
u1(-3*pi/4) aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(-3*pi/8) aux[3];
cx aux[3],aux[2];
u1(3*pi/8) aux[2];
cx aux[3],aux[2];
u1(-3*pi/8) aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
cx aux[2],aux[3];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
u1(pi) aux[0];
mcu1(0) down[0],up[0],aux[0];
h aux[0];
u1(3*pi/2) aux[1];
mcu1(-pi) down[0],up[0],aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(3*pi/4) aux[2];
mcu1(-pi/2) down[0],up[0],aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(pi) down[0],up[1],aux[0];
mcu1(pi/2) down[0],up[1],aux[1];
mcu1(pi/4) down[0],up[1],aux[2];
u1(-pi) aux[0];
h aux[0];
u1(-3*pi/2) aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(-3*pi/4) aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
cx aux[2],aux[3];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
u1(pi/2) aux[3];
cx aux[3],aux[0];
u1(-pi/2) aux[0];
cx aux[3],aux[0];
u1(pi/2) aux[0];
mcu1(-pi) down[0],up[1],aux[0];
h aux[0];
u1(3*pi/4) aux[3];
cx aux[3],aux[1];
u1(-3*pi/4) aux[1];
cx aux[3],aux[1];
u1(3*pi/4) aux[1];
mcu1(-pi/2) down[0],up[1],aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(3*pi/8) aux[3];
cx aux[3],aux[2];
u1(-3*pi/8) aux[2];
cx aux[3],aux[2];
u1(3*pi/8) aux[2];
mcu1(-pi/4) down[0],up[1],aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
u3(pi,0,pi) aux[2];
cx aux[2],aux[3];
u3(pi,0,pi) aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(pi) down[0],up[1],aux[0];
mcu1(pi/2) down[0],up[1],aux[1];
mcu1(pi/4) down[0],up[1],aux[2];
mcu1(0) down[1],up[1],aux[0];
mcu1(pi) down[1],up[1],aux[1];
mcu1(pi/2) down[1],up[1],aux[2];
u1(-pi) aux[0];
h aux[0];
u1(-3*pi/2) aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(-3*pi/4) aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
cx aux[2],aux[3];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
u1(pi/2) aux[3];
cx aux[3],aux[0];
u1(-pi/2) aux[0];
cx aux[3],aux[0];
u1(pi/2) aux[0];
mcu1(0) down[1],up[1],aux[0];
h aux[0];
u1(3*pi/4) aux[3];
cx aux[3],aux[1];
u1(-3*pi/4) aux[1];
cx aux[3],aux[1];
u1(3*pi/4) aux[1];
mcu1(-pi) down[1],up[1],aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(3*pi/8) aux[3];
cx aux[3],aux[2];
u1(-3*pi/8) aux[2];
cx aux[3],aux[2];
u1(3*pi/8) aux[2];
mcu1(-pi/2) down[1],up[1],aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
u3(pi,0,pi) aux[2];
cx aux[2],aux[3];
u3(pi,0,pi) aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(0) down[1],up[1],aux[0];
mcu1(pi) down[1],up[1],aux[1];
mcu1(pi/2) down[1],up[1],aux[2];
h aux[0];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
h aux[2];
cswap up[1],down[0],aux[0];
cswap up[1],down[1],aux[1];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(0) down[1],up[1],aux[0];
mcu1(-pi) down[1],up[1],aux[1];
mcu1(-pi/2) down[1],up[1],aux[2];
h aux[0];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
u3(pi,0,pi) aux[2];
cx aux[2],aux[3];
u3(pi,0,pi) aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(0) down[1],up[1],aux[0];
mcu1(pi) down[1],up[1],aux[1];
mcu1(pi/2) down[1],up[1],aux[2];
u1(-pi/2) aux[3];
cx aux[3],aux[0];
u1(pi/2) aux[0];
cx aux[3],aux[0];
u1(-pi/2) aux[0];
h aux[0];
u1(-3*pi/4) aux[3];
cx aux[3],aux[1];
u1(3*pi/4) aux[1];
cx aux[3],aux[1];
u1(-3*pi/4) aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(-3*pi/8) aux[3];
cx aux[3],aux[2];
u1(3*pi/8) aux[2];
cx aux[3],aux[2];
u1(-3*pi/8) aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
cx aux[2],aux[3];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
u1(pi) aux[0];
mcu1(0) down[1],up[1],aux[0];
u1(3*pi/2) aux[1];
mcu1(-pi) down[1],up[1],aux[1];
u1(3*pi/4) aux[2];
mcu1(-pi/2) down[1],up[1],aux[2];
mcu1(-pi) down[0],up[1],aux[0];
mcu1(-pi/2) down[0],up[1],aux[1];
mcu1(-pi/4) down[0],up[1],aux[2];
h aux[0];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
u3(pi,0,pi) aux[2];
cx aux[2],aux[3];
u3(pi,0,pi) aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(pi) down[0],up[1],aux[0];
mcu1(pi/2) down[0],up[1],aux[1];
mcu1(pi/4) down[0],up[1],aux[2];
u1(-pi/2) aux[3];
cx aux[3],aux[0];
u1(pi/2) aux[0];
cx aux[3],aux[0];
u1(-pi/2) aux[0];
h aux[0];
u1(-3*pi/4) aux[3];
cx aux[3],aux[1];
u1(3*pi/4) aux[1];
cx aux[3],aux[1];
u1(-3*pi/4) aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(-3*pi/8) aux[3];
cx aux[3],aux[2];
u1(3*pi/8) aux[2];
cx aux[3],aux[2];
u1(-3*pi/8) aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
cx aux[2],aux[3];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
u1(pi) aux[0];
mcu1(-pi) down[0],up[1],aux[0];
h aux[0];
u1(3*pi/2) aux[1];
mcu1(-pi/2) down[0],up[1],aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(3*pi/4) aux[2];
mcu1(-pi/4) down[0],up[1],aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(pi) down[0],up[2],aux[0];
mcu1(pi/2) down[0],up[2],aux[1];
mcu1(pi/4) down[0],up[2],aux[2];
u1(-pi) aux[0];
h aux[0];
u1(-3*pi/2) aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(-3*pi/4) aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
cx aux[2],aux[3];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
u1(pi/2) aux[3];
cx aux[3],aux[0];
u1(-pi/2) aux[0];
cx aux[3],aux[0];
u1(pi/2) aux[0];
mcu1(-pi) down[0],up[2],aux[0];
h aux[0];
u1(3*pi/4) aux[3];
cx aux[3],aux[1];
u1(-3*pi/4) aux[1];
cx aux[3],aux[1];
u1(3*pi/4) aux[1];
mcu1(-pi/2) down[0],up[2],aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(3*pi/8) aux[3];
cx aux[3],aux[2];
u1(-3*pi/8) aux[2];
cx aux[3],aux[2];
u1(3*pi/8) aux[2];
mcu1(-pi/4) down[0],up[2],aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
u3(pi,0,pi) aux[2];
cx aux[2],aux[3];
u3(pi,0,pi) aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(pi) down[0],up[2],aux[0];
mcu1(pi/2) down[0],up[2],aux[1];
mcu1(pi/4) down[0],up[2],aux[2];
mcu1(0) down[1],up[2],aux[0];
mcu1(pi) down[1],up[2],aux[1];
mcu1(pi/2) down[1],up[2],aux[2];
u1(-pi) aux[0];
h aux[0];
u1(-3*pi/2) aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(-3*pi/4) aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
cx aux[2],aux[3];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
u1(pi/2) aux[3];
cx aux[3],aux[0];
u1(-pi/2) aux[0];
cx aux[3],aux[0];
u1(pi/2) aux[0];
mcu1(0) down[1],up[2],aux[0];
h aux[0];
u1(3*pi/4) aux[3];
cx aux[3],aux[1];
u1(-3*pi/4) aux[1];
cx aux[3],aux[1];
u1(3*pi/4) aux[1];
mcu1(-pi) down[1],up[2],aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(3*pi/8) aux[3];
cx aux[3],aux[2];
u1(-3*pi/8) aux[2];
cx aux[3],aux[2];
u1(3*pi/8) aux[2];
mcu1(-pi/2) down[1],up[2],aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
u3(pi,0,pi) aux[2];
cx aux[2],aux[3];
u3(pi,0,pi) aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(0) down[1],up[2],aux[0];
mcu1(pi) down[1],up[2],aux[1];
mcu1(pi/2) down[1],up[2],aux[2];
h aux[0];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
h aux[2];
cswap up[2],down[0],aux[0];
cswap up[2],down[1],aux[1];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(0) down[1],up[2],aux[0];
mcu1(-pi) down[1],up[2],aux[1];
mcu1(-pi/2) down[1],up[2],aux[2];
h aux[0];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
u3(pi,0,pi) aux[2];
cx aux[2],aux[3];
u3(pi,0,pi) aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(0) down[1],up[2],aux[0];
mcu1(pi) down[1],up[2],aux[1];
mcu1(pi/2) down[1],up[2],aux[2];
u1(-pi/2) aux[3];
cx aux[3],aux[0];
u1(pi/2) aux[0];
cx aux[3],aux[0];
u1(-pi/2) aux[0];
h aux[0];
u1(-3*pi/4) aux[3];
cx aux[3],aux[1];
u1(3*pi/4) aux[1];
cx aux[3],aux[1];
u1(-3*pi/4) aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(-3*pi/8) aux[3];
cx aux[3],aux[2];
u1(3*pi/8) aux[2];
cx aux[3],aux[2];
u1(-3*pi/8) aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
cx aux[2],aux[3];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
u1(pi) aux[0];
mcu1(0) down[1],up[2],aux[0];
u1(3*pi/2) aux[1];
mcu1(-pi) down[1],up[2],aux[1];
u1(3*pi/4) aux[2];
mcu1(-pi/2) down[1],up[2],aux[2];
mcu1(-pi) down[0],up[2],aux[0];
mcu1(-pi/2) down[0],up[2],aux[1];
mcu1(-pi/4) down[0],up[2],aux[2];
h aux[0];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
u3(pi,0,pi) aux[2];
cx aux[2],aux[3];
u3(pi,0,pi) aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(pi) down[0],up[2],aux[0];
mcu1(pi/2) down[0],up[2],aux[1];
mcu1(pi/4) down[0],up[2],aux[2];
u1(-pi/2) aux[3];
cx aux[3],aux[0];
u1(pi/2) aux[0];
cx aux[3],aux[0];
u1(-pi/2) aux[0];
h aux[0];
u1(-3*pi/4) aux[3];
cx aux[3],aux[1];
u1(3*pi/4) aux[1];
cx aux[3],aux[1];
u1(-3*pi/4) aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(-3*pi/8) aux[3];
cx aux[3],aux[2];
u1(3*pi/8) aux[2];
cx aux[3],aux[2];
u1(-3*pi/8) aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
cx aux[2],aux[3];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
u1(pi) aux[0];
mcu1(-pi) down[0],up[2],aux[0];
h aux[0];
u1(3*pi/2) aux[1];
mcu1(-pi/2) down[0],up[2],aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(3*pi/4) aux[2];
mcu1(-pi/4) down[0],up[2],aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(pi) down[0],up[3],aux[0];
mcu1(pi/2) down[0],up[3],aux[1];
mcu1(pi/4) down[0],up[3],aux[2];
u1(-pi) aux[0];
h aux[0];
u1(-3*pi/2) aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(-3*pi/4) aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
cx aux[2],aux[3];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
u1(pi/2) aux[3];
cx aux[3],aux[0];
u1(-pi/2) aux[0];
cx aux[3],aux[0];
u1(pi/2) aux[0];
mcu1(-pi) down[0],up[3],aux[0];
h aux[0];
u1(3*pi/4) aux[3];
cx aux[3],aux[1];
u1(-3*pi/4) aux[1];
cx aux[3],aux[1];
u1(3*pi/4) aux[1];
mcu1(-pi/2) down[0],up[3],aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(3*pi/8) aux[3];
cx aux[3],aux[2];
u1(-3*pi/8) aux[2];
cx aux[3],aux[2];
u1(3*pi/8) aux[2];
mcu1(-pi/4) down[0],up[3],aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
u3(pi,0,pi) aux[2];
cx aux[2],aux[3];
u3(pi,0,pi) aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(pi) down[0],up[3],aux[0];
mcu1(pi/2) down[0],up[3],aux[1];
mcu1(pi/4) down[0],up[3],aux[2];
mcu1(0) down[1],up[3],aux[0];
mcu1(pi) down[1],up[3],aux[1];
mcu1(pi/2) down[1],up[3],aux[2];
u1(-pi) aux[0];
h aux[0];
u1(-3*pi/2) aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(-3*pi/4) aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
cx aux[2],aux[3];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
u1(pi/2) aux[3];
cx aux[3],aux[0];
u1(-pi/2) aux[0];
cx aux[3],aux[0];
u1(pi/2) aux[0];
mcu1(0) down[1],up[3],aux[0];
h aux[0];
u1(3*pi/4) aux[3];
cx aux[3],aux[1];
u1(-3*pi/4) aux[1];
cx aux[3],aux[1];
u1(3*pi/4) aux[1];
mcu1(-pi) down[1],up[3],aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(3*pi/8) aux[3];
cx aux[3],aux[2];
u1(-3*pi/8) aux[2];
cx aux[3],aux[2];
u1(3*pi/8) aux[2];
mcu1(-pi/2) down[1],up[3],aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
u3(pi,0,pi) aux[2];
cx aux[2],aux[3];
u3(pi,0,pi) aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(0) down[1],up[3],aux[0];
mcu1(pi) down[1],up[3],aux[1];
mcu1(pi/2) down[1],up[3],aux[2];
h aux[0];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
h aux[2];
cswap up[3],down[0],aux[0];
cswap up[3],down[1],aux[1];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(0) down[1],up[3],aux[0];
mcu1(-pi) down[1],up[3],aux[1];
mcu1(-pi/2) down[1],up[3],aux[2];
h aux[0];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
u3(pi,0,pi) aux[2];
cx aux[2],aux[3];
u3(pi,0,pi) aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(0) down[1],up[3],aux[0];
mcu1(pi) down[1],up[3],aux[1];
mcu1(pi/2) down[1],up[3],aux[2];
u1(-pi/2) aux[3];
cx aux[3],aux[0];
u1(pi/2) aux[0];
cx aux[3],aux[0];
u1(-pi/2) aux[0];
h aux[0];
u1(-3*pi/4) aux[3];
cx aux[3],aux[1];
u1(3*pi/4) aux[1];
cx aux[3],aux[1];
u1(-3*pi/4) aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(-3*pi/8) aux[3];
cx aux[3],aux[2];
u1(3*pi/8) aux[2];
cx aux[3],aux[2];
u1(-3*pi/8) aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
cx aux[2],aux[3];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
u1(pi) aux[0];
mcu1(0) down[1],up[3],aux[0];
u1(3*pi/2) aux[1];
mcu1(-pi) down[1],up[3],aux[1];
u1(3*pi/4) aux[2];
mcu1(-pi/2) down[1],up[3],aux[2];
mcu1(-pi) down[0],up[3],aux[0];
mcu1(-pi/2) down[0],up[3],aux[1];
mcu1(-pi/4) down[0],up[3],aux[2];
h aux[0];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
u3(pi,0,pi) aux[2];
cx aux[2],aux[3];
u3(pi,0,pi) aux[2];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
mcu1(pi) down[0],up[3],aux[0];
mcu1(pi/2) down[0],up[3],aux[1];
mcu1(pi/4) down[0],up[3],aux[2];
u1(-pi/2) aux[3];
cx aux[3],aux[0];
u1(pi/2) aux[0];
cx aux[3],aux[0];
u1(-pi/2) aux[0];
h aux[0];
u1(-3*pi/4) aux[3];
cx aux[3],aux[1];
u1(3*pi/4) aux[1];
cx aux[3],aux[1];
u1(-3*pi/4) aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(-3*pi/8) aux[3];
cx aux[3],aux[2];
u1(3*pi/8) aux[2];
cx aux[3],aux[2];
u1(-3*pi/8) aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
cx aux[2],aux[3];
h aux[2];
cu1(pi/2) aux[2],aux[1];
h aux[1];
cu1(pi/4) aux[2],aux[0];
cu1(pi/2) aux[1],aux[0];
h aux[0];
u1(pi) aux[0];
mcu1(-pi) down[0],up[3],aux[0];
h aux[0];
u1(3*pi/2) aux[1];
mcu1(-pi/2) down[0],up[3],aux[1];
cu1(-pi/2) aux[1],aux[0];
h aux[1];
u1(3*pi/4) aux[2];
mcu1(-pi/4) down[0],up[3],aux[2];
cu1(-pi/4) aux[2],aux[0];
cu1(-pi/2) aux[2],aux[1];
h aux[2];
measure up[0] -> m[0];
measure up[1] -> m[1];
measure up[2] -> m[2];
measure up[3] -> m[3];
