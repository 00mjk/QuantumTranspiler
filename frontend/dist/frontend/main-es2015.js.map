{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/analyze/analyze.component.ts","./src/app/analyze/analyze.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/bottom-sheet/bottom-sheet.component.ts","./src/app/bottom-sheet/bottom-sheet.component.html","./src/app/circuit/circuit.component.ts","./src/app/circuit/circuit.component.html","./src/app/code/code.component.ts","./src/app/code/code.component.html","./src/app/convert/convert.component.ts","./src/app/convert/convert.component.html","./src/app/export/export.component.ts","./src/app/export/export.component.html","./src/app/gate-edit/gate-edit.component.ts","./src/app/gate-edit/gate-edit.component.html","./src/app/graphical/graphical.component.ts","./src/app/graphical/graphical.component.html","./src/app/import/import.component.ts","./src/app/import/import.component.html","./src/app/input/input.component.ts","./src/app/input/input.component.html","./src/app/output/output.component.ts","./src/app/output/output.component.html","./src/app/services/Operation.ts","./src/app/services/Utility.ts","./src/app/services/data.service.ts","./src/app/services/http.service.ts","./src/app/simulate/simulate.component.ts","./src/app/simulate/simulate.component.html","./src/app/stepper/stepper.component.ts","./src/app/stepper/stepper.component.html","./src/app/tab/tab.component.ts","./src/app/tab/tab.component.html","./src/app/unroll/unroll.component.ts","./src/app/unroll/unroll.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../services/http.service';\nimport { DataService } from '../services/data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n} from '@angular/animations';\nimport { MatSelectChange } from '@angular/material/select';\n\n@Component({\n  selector: 'app-analyze',\n  animations: [\n    trigger('expert', [\n      state('open', style({\n        visibility: 'visible',\n        opacity: '1',\n        width: '*',\n      })),\n      state('closed', style({\n        visibility: 'hidden',\n        width: \"0px\",\n        opacity: '0',\n\n      })),\n      transition('open => closed', [\n        animate('0.5s')\n      ]),\n      transition('closed => open', [\n        animate('0.5s')\n      ]),\n    ]),\n  ],\n  templateUrl: './analyze.component.html',\n  styleUrls: ['./analyze.component.scss']\n})\nexport class AnalyzeComponent implements OnInit {\n  isExpert = false;\n  formatOptions: string[] = [\"OpenQASM\", \"Quil\", \"Qiskit\", \"Pyquil\"]\n  selectedFormatOption: string;\n\n\n  public depth = {\n    \"q_depth\": 0,\n    \"q_gate_times\": 0,\n    \"q_two_qubit\": 0,\n    \"r_depth\": 0,\n    \"r_gate_times\": 0,\n    \"r_two_qubit\": 0\n  };\n\n  architecture: string;\n  formatUsed: string;\n  \n  constructor(private http: HttpService, private data: DataService, private snackbar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  async analyse() {\n    let object = {\n      \"circuit\": this.data.getCircuit(\"internal\")\n    }\n    let counts: string = await this.http.callBackend(object, \"depth\")\n    let depthObject = JSON.parse(counts)\n    if (depthObject) {\n      this.depth = depthObject;\n    }\n  }\n\n  useQiskit() {\n    this.architecture = \"IBMQ\"\n    this.selectedFormatOption = \"OpenQASM\"\n    this.unroll()\n    if (!this.isExpert) {\n      this.formatUsed = \"qasm\"\n    }    \n  }\n\n  useRigetti() {\n    this.architecture = \"Rigetti\"\n    this.selectedFormatOption = \"Quil\"\n    this.unroll()\n    if (!this.isExpert) {\n      this.formatUsed = \"quil\"\n    }   \n  }\n\n  private async unroll() {  \n    if (this.isExpert) {\n      if (!(this.formatOptions.includes(this.selectedFormatOption))) {\n        this.snackbar.open(\"You must choose an output language/framework or disable expert mode.\");\n        return\n      }\n    }  \n\n    this.snackbar.open(\"Request sent to backend. Results will be available shortly.\");\n    let object = {\n      \"option\": this.architecture,\n      \"circuit\": this.data.circuits[\"internal\"],\n      \"isExpert\": this.isExpert,\n      \"format\": this.selectedFormatOption,\n    }\n\n    let circuit = await this.http.callBackend(object, \"unroll\")\n    if (circuit) {\n      this.data.setCircuit(\"export\", circuit)\n    }\n  }\n\n  download() {\n    if (this.data.circuits[2] === \"\") {\n      this.snackbar.open(\"Circuit is empty.\");\n      return;\n    }\n    if (!this.formatUsed) {\n      this.snackbar.open(\"No valid format specified.\");\n      return;\n    }\n    var blob = new Blob([this.data.circuits[\"export\"]], {type: \"text/plain;charset=utf-8\"});\n    saveAs(blob, \"circuit.\" + this.formatUsed);\n  }\n\n  changed(event: MatSelectChange) {\n    this.selectedFormatOption = event.value;\n    this.formatUsed = this.selectedFormatOption;\n    if (this.architecture) {\n      this.unroll()\n    }    \n  } \n\n}\n","<div class=\"container\" class=\"tab-content\">\n    <mat-list class=\"pl-4 matList\">\n        <div mat-subheader>Qiskit</div>\n        <div class=\"row justify-content-center\">\n            <div class=\"col\" matTooltip=\"Length of the longest path of the unrolled circuit for IBM QX.\">Depth:</div>\n            <div class=\"col\">{{depth['q_depth']}}</div>\n            <div class=\"col\"\n                matTooltip=\"Counts the two qubits gates on the longest path of the unrolled circuit for IBM QX.\">\n                Two-Qubit Depth:</div>\n            <div class=\"col\">{{depth['q_two_qubit']}}</div>\n            <div class=\"col\" matTooltip=\"Counts the number of pulses of the unrolled circuit for IBM QX.\">X90 Pulses\n                Depth:</div>\n            <div class=\"col\">{{depth['q_gate_times']}}</div>\n            <div class=\"col\"><button mat-mini-fab color=\"primary\" class=\"col\" (click)=\"useQiskit()\">\n                    <mat-icon>keyboard_arrow_right</mat-icon>\n                </button></div>\n\n        </div>\n\n\n        <mat-divider class=\"mt-2 mb-2\"></mat-divider>\n        <div mat-subheader>Rigetti</div>\n        <div class=\"row\">\n            <div class=\"col\"\n                matTooltip=\"Length of the longest path of the unrolled circuit for Rigetti architectures..\">Depth:</div>\n            <div class=\"col\">{{depth['r_depth']}}</div>\n            <div class=\"col\"\n                matTooltip=\"Counts the two qubits gates on the longest path of the unrolled circuit for Rigetti architectures.\">\n                Two Qubit Depth:</div>\n            <div class=\"col\">{{depth['r_two_qubit']}}</div>\n            <div class=\"col\"\n                matTooltip=\"Counts the number of pulses of the unrolled circuit for Rigetti architectures.\">X90 Pulses\n                Depth:</div>\n            <div class=\"col\">{{depth['r_gate_times']}}</div>\n            <div class=\"col\"><button mat-mini-fab color=\"primary\" class=\"col\" (click)=\"useRigetti()\">\n                    <mat-icon>keyboard_arrow_right</mat-icon>\n                </button></div>\n        </div>\n    </mat-list>\n</div>\n\n<mat-divider class=\"mt-2 mb-2\"></mat-divider>\n<div class=\"row \">\n    <div class=\"col float-left pl-5\">\n        <mat-checkbox class=\"example-margin\" [(ngModel)]=\"isExpert\">Expert Mode</mat-checkbox>\n    </div>\n    <div class=\"col-4\" [@expert]=\"isExpert ? 'open' : 'closed'\">\n        <mat-form-field class=\"w-100\">\n            <mat-label> Choose Export Language/Framework</mat-label>\n            <mat-select (selectionChange)=\"changed($event)\">\n                <p class=\"pl-2 pt-2 selectionTitle\">Languages</p>\n                <mat-option value=\"OpenQASM\">\n                    OpenQASM\n                </mat-option>\n                <mat-option value=\"Quil\">\n                    Quil\n                </mat-option>\n                <mat-divider></mat-divider>\n                <p class=\"pl-2 pt-2 selectionTitle\">Frameworks</p>\n                <mat-option value=\"Qiskit\">\n                    Qiskit\n                </mat-option>\n                <mat-option\n                    matTooltip=\"Pyquil program can be exported in the backend. The export of Pyquil skeleton code is experimential.\"\n                    matTooltipClass=\"tooltip-large\" value=\"Pyquil\">\n                    Pyquil\n                </mat-option>\n\n            </mat-select>\n        </mat-form-field>\n    </div>\n\n    <div class=\"col float-right pr-5\">\n        <button (click)=\"download()\" mat-mini-fab class=\"float-right\" matTooltip=\"Download Circuit.\"\n            matTooltipClass=\"tooltip-large\" color=\"primary\">\n            <mat-icon>system_update</mat-icon>\n        </button>\n    </div>\n\n</div>\n<app-code class=\"pt-5 row\" circuitRef='export'></app-code>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ImportComponent } from './import/import.component';\nimport { CircuitComponent } from './circuit/circuit.component';\nimport { ExportComponent } from './export/export.component';\nimport { ConvertComponent } from './convert/convert.component';\nimport { StepperComponent } from './stepper/stepper.component';\nimport { UnrollComponent } from './unroll/unroll.component';\nimport { AnalyzeComponent } from './analyze/analyze.component';\n\n\nconst routes: Routes = [\n  { path: 'import', component: ImportComponent },\n  { path: 'circuit', component: CircuitComponent },\n  { path: 'export', component: ExportComponent },\n  { path: 'convert', component: ConvertComponent },\n  { path: 'stepper', component: StepperComponent },\n  { path: 'unroll', component: AnalyzeComponent },\n  // { path: 'unroll', component: UnrollComponent },\n  { path: '**', redirectTo: '/stepper' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n\n }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<p>\n  <mat-toolbar color=\"primary\">\n    <span class=\"spacer\"></span>\n      <span>Quantum Circuit Transpiler</span>\n      \n      <span class=\"spacer-large\"></span>\n\n      <div>\n\n        <a mat-button [routerLink]=\"'/stepper'\"> <mat-icon>view_carousel</mat-icon>  Transpiling and Analyzing </a>\n        <a mat-button [routerLink]=\"'/convert'\"> <mat-icon>compare_arrows</mat-icon>  Circuit Conversion </a>\n        <!-- <a mat-button [routerLink]=\"'/import'\"> <mat-icon>input</mat-icon> Import </a>\n        <a mat-button [routerLink]=\"'/circuit'\"> <mat-icon>edit</mat-icon> Visualize and Edit </a>\n        <a mat-button [routerLink]=\"'/unroll'\"> <mat-icon>code</mat-icon> Unroll </a>\n        <a mat-button [routerLink]=\"'/export'\"> <mat-icon>arrow_forward</mat-icon> Export </a> -->\n  \n      </div>\n      <span class=\"spacer\"></span>\n  </mat-toolbar>\n</p>\n\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { InputComponent } from './input/input.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { CodeComponent } from './code/code.component';\nimport { MonacoEditorModule, NgxMonacoEditorConfig } from 'ngx-monaco-editor';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ImportComponent } from './import/import.component';\nimport { ExportComponent } from './export/export.component';\nimport { CircuitComponent } from './circuit/circuit.component';\nimport { ConvertComponent } from './convert/convert.component';\nimport { GraphicalComponent } from './graphical/graphical.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatSnackBarModule, MAT_SNACK_BAR_DEFAULT_OPTIONS} from '@angular/material/snack-bar';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport { StepperComponent } from './stepper/stepper.component';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport { OutputComponent } from './output/output.component';\nimport { UnrollComponent } from './unroll/unroll.component';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport {MatListModule} from '@angular/material/list';\nimport { TabComponent } from './tab/tab.component';\nimport { SimulateComponent } from './simulate/simulate.component';\nimport { AnalyzeComponent } from './analyze/analyze.component';\nimport { GateEditComponent } from './gate-edit/gate-edit.component';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport { BottomSheetComponent } from './bottom-sheet/bottom-sheet.component';\n\nconst monacoConfig: NgxMonacoEditorConfig = {\n  baseUrl: 'assets',\n  defaultOptions: { scrollBeyondLastLine: false }\n};\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InputComponent,\n    CodeComponent,\n    ImportComponent,\n    ExportComponent,\n    CircuitComponent,\n    ConvertComponent,\n    GraphicalComponent,\n    StepperComponent,\n    OutputComponent,\n    UnrollComponent,\n    TabComponent,\n    SimulateComponent,\n    AnalyzeComponent,\n    GateEditComponent,\n    BottomSheetComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDividerModule,\n    MatToolbarModule,\n    MatTabsModule,\n    MatIconModule,\n    MatTooltipModule,\n    FormsModule,\n    MonacoEditorModule.forRoot(),\n    HttpClientModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DragDropModule,\n    MatCheckboxModule,\n    MDBBootstrapModule.forRoot(),\n    MatListModule,\n    MatBottomSheetModule,\n    MatFormFieldModule,\n\n  ],\n  providers: [\n    {provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: {duration: 2500}}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-bottom-sheet',\n  templateUrl: './bottom-sheet.component.html',\n  styleUrls: ['./bottom-sheet.component.scss']\n})\nexport class BottomSheetComponent implements OnInit {\n  qubits: any[];\n  clbits: any[];\n  params: any[];\n  form: FormGroup;\n\n  constructor(private _bottomSheetRef: MatBottomSheetRef<BottomSheetComponent>, @Inject(MAT_BOTTOM_SHEET_DATA) public data: any, public fb: FormBuilder) {\n    this.qubits = data.qubits;\n    this.params = data.params;\n    this.clbits = data.clbits;\n\n    let validatorsObject = {}\n    for (let i = 0; i < this.qubits.length + this.params.length + this.clbits.length; i++) {\n      validatorsObject[\"\" + i] = ['', Validators.required]\n    }\n\n    this.form = fb.group(validatorsObject);\n  }\n  ngOnInit(): void {\n  }\n\n\n  isNumber(number) {\n    if (number === \"\") {\n      return false;\n    }\n    return !isNaN(number)\n  }\n\n  valuesSelected(event: MouseEvent) {\n    let data = {\n      qubits: this.qubits,\n      params: this.params,\n      clbits: this.clbits\n    }\n    this._bottomSheetRef.dismiss(data);\n    event.preventDefault();\n\n  }\n\n  trackByFn(item, id){\n    return item\n  }\n\n}\n","<form [formGroup]=\"form\">\n<mat-nav-list>\n    <div mat-list-item>\n        <span mat-line mat-subheader *ngIf=\"qubits.length > 0\">Qubits</span>\n        <div class=\"row\">\n            <mat-form-field class=\"col\" appearance=\"outline\" *ngFor=\"let qubit of qubits; index as index; trackBy: trackByFn\">\n                <input type=\"number\" matInput placeholder=\"Qubit {{index}}\" [(ngModel)]=\"qubits[index]\" formControlName=\"{{index}}\">\n                <!-- <mat-error *ngIf=\"signInForm.hasError('email', 'emailSignIn')\">\n                    Bitte geben Sie eine valide E-Mail Adresse ein.\n                  </mat-error> -->\n            </mat-form-field>\n        </div>\n    </div>\n\n    <div mat-list-item>\n        <span mat-line mat-subheader *ngIf=\"clbits.length > 0\">Classical Bit</span>\n        <div class=\"row\">\n            <mat-form-field class=\"col\" appearance=\"outline\" *ngFor=\"let clbit of clbits; index as index; trackBy: trackByFn\">\n                <input type=\"number\" matInput placeholder=\"Classical Bit {{index}}\" [(ngModel)]=\"clbits[index]\" formControlName=\"{{index + qubits.length}}\">\n            </mat-form-field>\n        </div>\n    </div>\n\n    <div mat-list-item>\n        <span mat-line mat-subheader *ngIf=\"params.length > 0\">Parameter</span>\n        <div class=\"row\">\n            <mat-form-field class=\"col\" appearance=\"outline\" *ngFor=\"let parameter of params; index as index; trackBy: trackByFn\">\n                <input type=\"number\" matInput  placeholder=\"Parameter {{index}}\" [(ngModel)]=\"params[index]\" formControlName=\"{{index + qubits.length + clbits.length}}\">\n            </mat-form-field>\n        </div>\n    </div>\n    <button [disabled]=\"!form.valid\" mat-raised-button color=\"primary\" class=\"w-100\" (click)=\"valuesSelected($event)\">Values selected.</button>\n</mat-nav-list>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-circuit',\n  templateUrl: './circuit.component.html',\n  styleUrls: ['./circuit.component.scss']\n})\nexport class CircuitComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <div class=\"container\">\n    <mat-tab-group mat-stretch-tabs>\n      <mat-tab label=\"Code\">\n        <app-code></app-code>\n        \n      </mat-tab>\n      <mat-tab label=\"Graphical Circuit\"> </mat-tab>\n    </mat-tab-group>\n  </div> -->\n\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <app-code circuitRef='internal'></app-code>\n    </div>\n    <div class=\"col-9\">\n      <app-tab></app-tab>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DataService } from '../services/data.service';\nimport { MonacoEditorModule, NgxEditorModel } from 'ngx-monaco-editor';\n\n@Component({\n  selector: 'app-code',\n  templateUrl: './code.component.html',\n  styleUrls: ['./code.component.scss']\n})\nexport class CodeComponent implements OnInit {\n  @Input() circuitRef: string;\n  editor: any;\n  decorations: any[] = [];\n\n  editorOptions = {\n    theme: 'vs-light', language: 'python', automaticLayout: true, scrollbar: {\n        useShadows: false,\n        verticalHasArrows: true,\n        horizontalHasArrows: true,\n        vertical: 'hidden',\n        horizontal: 'hidden',\n\n        verticalScrollbarSize: 0,\n        horizontalScrollbarSize: 17,\n        arrowSize: 30\n    },\n};;\n \n\n  constructor(public data: DataService) { \n  }\n\n  ngOnInit(): void {\n\n  }\n\n  onInit(editor) {\n    this.editor = editor;\n    if (this.circuitRef === \"internal\") {\n      this.data.highlightLines.subscribe((lines: number[]) => {        \n        if (lines.length > 0) {        \n          let firstLine = lines[0]\n          let lastLine = lines[lines.length - 1]\n          this.markLine(firstLine, lastLine);\n        }\n      })\n    }\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  onChange(circuit: string) {\n    this.data.setCircuitOnWrite(this.circuitRef, circuit)\n  }\n  \n\n  markLine(startLine: number, endLine: number) {\n    this.decorations = this.editor.deltaDecorations(this.decorations, [\n      { range: new monaco.Range(startLine,1,endLine,1), options: { isWholeLine: true, linesDecorationsClassName: 'myLineDecoration' }},\n    ]);\n\n    this.editor.revealLine(startLine);\n  }\n  \n\n}\n","<div class=\"outerDiv\" style=\"height: auto; width: 100%\" class=\"pt-2\">\n    <ngx-monaco-editor style=\"height: 650px\" [options]=\"editorOptions\" [ngModel] = \"data.getCircuit(circuitRef)\" (ngModelChange)=\"onChange($event)\" (onInit)=\"onInit($event)\"></ngx-monaco-editor>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DataService } from '../services/data.service';\nimport { InputComponent } from '../input/input.component';\n\n@Component({\n  selector: 'app-convert',\n  templateUrl: './convert.component.html',\n  styleUrls: ['./convert.component.scss']\n})\nexport class ConvertComponent implements OnInit {\n  @ViewChild(InputComponent) child:InputComponent;\n  selectedOption: string;\n  options: string[] = [\"OpenQASM\", \"Quil\", \"Qiskit\", \"Pyquil\"]\n\n  constructor(public data: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n  async computeInternal() {\n    this.child.computeInternal()\n  }\n\n}\n","\n<div class=\"container pt-2\">\n    <div class=\"row pt-2\">\n        <div class=\"col\">\n            <mat-form-field class=\"w-100\">\n                <mat-label> Choose Input</mat-label>\n                <mat-select (selectionChange)=\"data.changedInput($event)\">\n                    <p class=\"pl-2 pt-2\">Languages</p>\n                    <mat-option value=\"OpenQASM\">\n                        OpenQASM\n                    </mat-option>\n                    <mat-option value=\"Quil\">\n                        Quil\n                    </mat-option>\n                    <mat-divider></mat-divider>\n                    <p class=\"pl-2 pt-2\">Frameworks</p>\n                    <mat-option\n                        matTooltip=\"Name of the circuit must be qc. All occurences can be changed with CTRL + F2.\"\n                        matTooltipClass=\"tooltip-large\" value=\"Qiskit\">\n                        Qiskit\n                    </mat-option>\n                    <mat-option\n                        matTooltip=\"Name of the program must be p. All occurences can be changed with CTRL + F2.\"\n                        matTooltipClass=\"tooltip-large\" value=\"Pyquil\">\n                        Pyquil\n                    </mat-option>\n\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"col text-center\">\n            <button (click)=\"computeInternal()\" mat-mini-fab matTooltip=\"Convert Circuit.\"\n                matTooltipClass=\"tooltip-large\" color=\"primary\">\n                <mat-icon>forward</mat-icon>\n            </button>\n        </div>\n        <div class=\"col\">\n            <mat-form-field class=\"w-100\">\n                <mat-label> Choose Output</mat-label>\n                <mat-select (selectionChange)=\"data.changedExport($event)\">\n                    <p class=\"pl-2 pt-2\">Languages</p>\n                    <mat-option value=\"OpenQASM\">\n                        OpenQASM\n                    </mat-option>\n                    <mat-option value=\"Quil\">\n                        Quil\n                    </mat-option>\n                    <mat-divider></mat-divider>\n                    <p class=\"pl-2 pt-2\">Frameworks</p>\n                    <mat-option\n                        matTooltipClass=\"tooltip-large\" value=\"Qiskit\">\n                        Qiskit\n                    </mat-option>\n                    <mat-option \n                        matTooltip=\"Pyquil program can be exported in the backend. The export of Pyquil skeleton code is experimential.\"\n                        matTooltipClass=\"tooltip-large\" value=\"Pyquil\">\n                        Pyquil\n                    </mat-option>\n\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid pt-2\">\n    <div class=\"row\">\n        <div class=\"col content-left\">\n            <app-input compute=\"convert\"></app-input>\n        </div>\n        <div class=\"col\">\n            <div class=\"row\">\n                \n            </div>\n            <app-output></app-output>    \n        </div>\n    </div>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { HttpService } from '../services/http.service';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-export',\n  templateUrl: './export.component.html',\n  styleUrls: ['./export.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ExportComponent implements OnInit {  \n  options: string[] = [\"OpenQASM\", \"Quil\", \"Qiskit\", \"Pyquil\"]\n  selectedOption: string;\n\n  constructor(private http: HttpService, private snackbar: MatSnackBar, private data: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n  changed(event: MatSelectChange) {\n    console.log(event)\n    this.selectedOption = event.value\n  }\n\n  async computeExport() {\n    if (!(this.options.includes(this.selectedOption))) {\n      this.snackbar.open(\"You must choose an output language/framework.\");\n      return\n    }\n\n    let object = {\n      \"option\": this.selectedOption,\n      \"circuit\": this.data.getCircuit(\"current\")\n    }\n    let circuit = await this.http.callBackend(object, \"export_circuit\")\n    if (circuit) {\n      this.data.setExportCircuit(circuit, this.selectedOption)\n    }    \n  }\n\n}\n","<div class=\"container pt-2\">\n    <div class=\"row pt-2\">\n        <div class=\"col\"></div>\n        <div class=\"col text-center\">\n            <button (click)=\"computeExport()\" mat-mini-fab matTooltip=\"Export Circuit in the chosen format.\"\n                matTooltipClass=\"tooltip-large\" color=\"primary\">\n                <mat-icon>forward</mat-icon>\n            </button>\n        </div>\n\n        <div class=\"col float-right\">\n            <mat-form-field class=\"w-100\">\n                <mat-label> Choose Export Language/Framework</mat-label>\n                <mat-select (selectionChange)=\"changed($event)\">\n                    <p class=\"pl-2 pt-2 selectionTitle\">Languages</p>\n                    <mat-option value=\"OpenQASM\">\n                        OpenQASM\n                    </mat-option>\n                    <mat-option value=\"Quil\">\n                        Quil\n                    </mat-option>\n                    <mat-divider></mat-divider>\n                    <p class=\"pl-2 pt-2 selectionTitle\">Frameworks</p>\n                    <mat-option value=\"Qiskit\">\n                        Qiskit\n                    </mat-option>\n                    <mat-option \n                    matTooltip=\"Pyquil program can be exported in the backend. The export of Pyquil skeleton code is experimential.\"\n                        matTooltipClass=\"tooltip-large\" value=\"Pyquil\">\n                        Pyquil\n                    </mat-option>\n\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </div>\n\n</div>\n\n<div class=\"container-fluid pt-2\">\n    <div class=\"row\">\n        <div class=\"col content-left\">\n            <app-code circuitRef='current'></app-code>\n\n        </div>\n        <div class=\"col\">\n            <app-output></app-output>\n        </div>\n    </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { OperationIndex } from '../services/Operation';\nimport { DataService } from '../services/data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-gate-edit',\n  templateUrl: './gate-edit.component.html',\n  styleUrls: ['./gate-edit.component.scss']\n})\nexport class GateEditComponent implements OnInit {\n  @Input() gate: OperationIndex;\n  constructor(private data: DataService, private snackbar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  change() {\n    console.log(this.gate)\n    this.data.editOperation(this.gate, this.gate.lineNumbersInCircuit)\n  }\n  \n}\n","<h4>{{gate.operation.name}} Gate</h4>\n<div class=\"pl-4 row matList\">\n    <div class=\"col-3\">\n        <div mat-subheader>Control Qubits</div>\n        <div class=\"col\" *ngFor=\"let qubit of gate.qubits; index as index\">\n            <input matInput type=\"number\" *ngIf=\"(index < gate.operation.numberOfCtrlBits)\" [(ngModel)]=\"gate.qubits[index]\" (ngModelChange)=\"change()\">\n        </div>\n\n    </div>\n    <div class=\"col-3\">\n        <div mat-subheader>Target Qubits</div>\n        <div class=\"col\" *ngFor=\"let qubit of gate.qubits; index as index\">\n            <input matInput type=\"number\" *ngIf=\"(index >= gate.operation.numberOfCtrlBits)\" [(ngModel)]=\"gate.qubits[index]\" (ngModelChange)=\"change()\">\n        </div>\n    </div>\n    <div class=\"col-3\">\n    <div mat-subheader>Classical Bits</div>\n        <div class=\"col\" *ngFor=\"let clbit of gate.clbits; index as index\">\n            <input matInput type=\"number\" [(ngModel)]=\"gate.clbits[index]\" (ngModelChange)=\"change()\">\n        </div>\n    </div>\n    <div class=\"col-3\">\n        <div mat-subheader>Parameter</div>\n        <div class=\"col\" *ngFor=\"let parameter of gate.parameter; index as index\">\n            <input matInput type=\"number\" [(ngModel)]=\"gate.parameter[index]\" (ngModelChange)=\"change()\">\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, Inject, AfterViewInit, ChangeDetectorRef, HostListener } from '@angular/core';\nimport { DataService } from '../services/data.service';\nimport { Operation, importantGatesList, OperationIndex, gateMap } from '../services/Operation';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { HttpService } from '../services/http.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { DOCUMENT } from '@angular/common';\nimport { ConnectorAttributes, delay } from '../services/Utility'\nimport { BehaviorSubject } from 'rxjs';\nimport { MatBottomSheetRef, MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { BottomSheetComponent } from '../bottom-sheet/bottom-sheet.component';\n\n@Component({\n  selector: 'app-graphical',\n  templateUrl: './graphical.component.html',\n  styleUrls: ['./graphical.component.scss']\n})\nexport class GraphicalComponent implements OnInit, AfterViewInit {\n  public importantGatesList: Operation[] = importantGatesList;;\n  public lineList: ConnectorAttributes[] = [];\n  public isGateSelected: boolean = false;\n  public selectedGate: OperationIndex;\n  public oldSelectedGate: OperationIndex;\n  public dragged: boolean = false;\n\n  constructor(public data: DataService, private http: HttpService, private _elementRef: ElementRef, private snackbar: MatSnackBar, @Inject(DOCUMENT) document, private cdRef: ChangeDetectorRef, private _bottomSheet: MatBottomSheet) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    this.data.circuitChanged.subscribe(value => {\n      this.cdRef.detectChanges();\n      if (value) {\n        this.computeGateConnections()\n      }\n    })\n  }\n\n  drop(event: CdkDragDrop<OperationIndex[]>) {\n    console.log(event.container.id)\n    // change position of gate    \n    if (event.previousContainer === event.container) {\n      if ((event.container.id === \"gateList\") || event.previousIndex == event.currentIndex) {\n        return;\n      }\n      this.moveOperation(event)\n      // remove gate\n    } else if (event.container.id === \"gateList\") {\n      let id: string = event.item.element.nativeElement.id;\n      let indices = id.split(\"-\");\n      let qubitIndex = parseInt(indices[0])\n      let index = parseInt(indices[1])\n      this.data.removeOperationAtIndex(index, qubitIndex)\n      // add new gate\n    } else if (event.previousContainer.id === \"gateList\") {\n      let qubitIndex: number = parseInt(event.container.id);\n      let index: number = event.currentIndex;\n      let operation: Operation = gateMap[event.item.element.nativeElement.id.toLowerCase()]\n      if (operation.numberOfQubits > 1 || operation.numberOfParameter > 0 || operation.numberOfClbits > 0) {\n        this.openBottomSheet(operation, qubitIndex, index)\n      } else {\n        let operationIndex: OperationIndex = new OperationIndex(index, operation, [], [qubitIndex], [], [this.data.getLinesToInsert(index, qubitIndex)])\n        this.data.addOperationIndex(operationIndex)\n      }\n      // change qubitIndex and possibly index of gate\n    } else {\n      this.moveOperation(event)\n    }\n  }\n\n  moveOperation(event: CdkDragDrop<OperationIndex[]>) {\n    let newQubitIndex: number = parseInt(event.container.id);\n    let newIndex: number = event.currentIndex;\n    let id: string = event.item.element.nativeElement.id;\n    let indices = id.split(\"-\");\n    let qubitIndex = parseInt(indices[0])\n    let index = parseInt(indices[1])\n    let operationIndex: OperationIndex = this.data.operationsAtBit[qubitIndex][index];\n\n    let linesToRemove: number[] = null;\n    // change index\n    if (index != newIndex) {\n      linesToRemove = operationIndex.lineNumbersInCircuit\n      operationIndex.lineNumbersInCircuit = [this.data.getLinesToInsertEvent(index, newIndex, newQubitIndex)];\n    }\n    // change qubit \n    for (let i = 0; i < operationIndex.qubits.length; i++) {\n      if (operationIndex.qubits[i] == qubitIndex) {\n        operationIndex.qubits[i] = newQubitIndex\n      }\n    }\n    // change clbit\n    // subtract number of qubits to the get clbit references\n    let clbitIndex = qubitIndex - this.data.qubitNames.length\n    let newClbitIndex = newQubitIndex - this.data.qubitNames.length\n    for (let i = 0; i < operationIndex.clbits.length; i++) {\n      if ((operationIndex.clbits[i]) == clbitIndex) {\n        operationIndex.clbits[i] = newClbitIndex\n      }\n    }\n    this.data.editOperation(operationIndex, linesToRemove);\n  }\n\n  openBottomSheet(operation: Operation, qubitIndex: number, index: number): void {\n    let qubits = [qubitIndex].concat(operation.generateList(operation.numberOfQubits - 1))\n    let params = operation.generateList(operation.numberOfParameter)\n    let clbits = operation.generateList(operation.numberOfClbits)\n    const bottomSheetRef = this._bottomSheet.open(BottomSheetComponent, {\n      data: { qubits: qubits, params: params, clbits: clbits },\n    });\n\n    bottomSheetRef.afterDismissed().subscribe((data) => {\n      if (data) {\n        let qubits = data.qubits;\n        let params = data.params;\n        let clbits = data.clbits;\n        let operationIndex: OperationIndex = new OperationIndex(index, operation, params, qubits, clbits, [this.data.getLinesToInsert(index, qubits[0])]);\n        this.data.addOperationIndex(operationIndex)\n      }\n    });\n\n  }\n\n  private getLineNumbersIncreasedByOne(operationIndex: OperationIndex) {\n    let lineNumbers = []\n    operationIndex.lineNumbersInCircuit.forEach(element => {\n      lineNumbers.push(element + 1)\n    })\n    return lineNumbers;\n  }\n\n  public getTooltip(operationIndex: OperationIndex) {\n    let lineNumbers = this.getLineNumbersIncreasedByOne(operationIndex);\n    let tooltip = `Lines in code: ${this.getLineNumbersIncreasedByOne(operationIndex)}`;\n    if (operationIndex.parameter.length > 0) {\n      tooltip += `\\nParameter: ${operationIndex.parameter}`\n    }\n    return tooltip;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  @HostListener('window:scroll', ['$event'])\n  recomputeGateConnections(event) {\n    this.computeGateConnections()\n  }\n\n  private async computeGateConnections() {\n    // hacky solution: without delay the new elements with their new coordinates might not be in the view\n    await delay(10)\n\n    let lineList: ConnectorAttributes[] = [];\n    let circuitElement = document.getElementById(`circuit`)\n    if (circuitElement == null) {\n      return;\n    }\n    let circuitLeft = circuitElement.getClientRects()[0].x\n    let circuitRight = circuitElement.getClientRects()[0].x + circuitElement.getClientRects()[0].width;\n\n    this.data.operationsAtBit.forEach((operationsAtIndex, qubitIndex) => {\n      for (let index = 0; index < operationsAtIndex.length; index++) {\n        let operation: OperationIndex = operationsAtIndex[index]\n        let line = new ConnectorAttributes()\n        // operationsAtIndex.forEach((operation: OperationIndex, index) => {\n        if (!operation.placeholder && !operation.control) {\n          if (operation.operation.numberOfQubits > 1) {            \n            operation.qubits.forEach(qubit => {\n              let element = document.getElementById(`${qubit}-${index}`)\n              if (element == null) {\n                return;\n              }\n              let rects = element.getClientRects()[0]\n              if (rects == null) {\n                return;\n              }\n              let xLeft = rects.x;\n              let xRight = rects.x + rects.width;\n              let yTop = rects.y\n              let yBot = rects.y + rects.height\n              line.setYTop(yTop)\n              line.setYBot(yBot)\n              line.setYLeft(xLeft)\n              line.setXRight(xRight)\n            })\n            \n          } else if (operation.operation.numberOfClbits > 0) {  \n            line.measure = true;         \n            let element = document.getElementById(`${operation.qubits[0]}-${index}`)\n            let element2 = document.getElementById(`${operation.clbits[0] + this.data.qubitNames.length}-${index}`)\n            if (element == null || element2 == null) {\n              continue;\n            }\n            let rects = element.getClientRects()[0]\n            let rects2 = element2.getClientRects()[0]\n            if (rects == null || rects2 == null) {\n              continue;\n            }\n            line.setYTop(rects.y)\n            line.setYBot(rects2.y + rects2.height)\n            line.setYLeft(rects.x)\n            line.setXRight(rects.x + rects.width)\n          }\n          if (line.xLeft < circuitLeft) {\n            continue;\n          }\n          if (line.xRight > circuitRight) {\n            continue;\n          }\n          lineList.push(line)\n        }\n\n      }\n    })\n    this.lineList = lineList;\n    this.cdRef.detectChanges();\n  }\n\n  public setStyle(line: ConnectorAttributes) {\n    let styles = {\n      'top': line.yTop + \"px\",\n      'left': line.xLeft + \"px\",\n      \"width\": line.getWidth() + \"px\",\n      \"height\": line.getHeight() + \"px\",\n    };\n\n    if (line.measure) {\n      styles['background-image'] = \"linear-gradient(to bottom right, #4b830d, #aee571)\"\n      styles['opacity'] = \"15%\"\n    } else {\n      styles['background-image'] = \"linear-gradient(to bottom right, #005cb2, #6ab7ff)\"\n      styles['opacity'] = \"25%\"\n    }\n\n    return styles;\n  }\n\n  edit(operationIndex: OperationIndex) {\n    this.oldSelectedGate = operationIndex;\n    this.showGate(operationIndex)\n  }\n\n  onMouseEnter(operationIndex: OperationIndex) {\n    //recompute gate connections because of new elements on site that can change the layout\n    this.computeGateConnections()\n    this.highlightLines(operationIndex)\n    if (!this.oldSelectedGate) {\n      this.showGate(operationIndex);\n    }\n  }\n\n  showGate(operationIndex: OperationIndex) {\n    this.highlightLines(operationIndex)\n    this.selectedGate = operationIndex;\n    this.isGateSelected = true;\n  }\n\n  private highlightLines(operationIndex: OperationIndex) {\n    this.data.highlightLines.next(this.getLineNumbersIncreasedByOne(operationIndex))\n  }\n\n  onMouseLeave() {\n    if (this.oldSelectedGate) {\n      this.showGate(this.oldSelectedGate);\n    }\n  }\n\n  dragStarted() {\n    this.dragged = true;\n  }\n\n  dragEnded() {\n    this.dragged = false;\n  }\n}\n","<div cdkDropListGroup cdkDropListOrientation=\"horizontal\" class=\"tab-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div>\n                <h4>Possible Gates</h4>\n                <div cdkDropListSortingDisabled id=\"gateList\" cdkDropList #gateList=\"cdkDropList\"\n                    [cdkDropListData]=\"importantGatesList\" cdkDropListOrientation=\"horizontal\"\n                    (cdkDropListDropped)=\"drop($event)\">\n                    <div class=\"deleteBox text-center\" *ngIf=\"dragged\">\n                        <p class=\"deleteText\">Put the item here to remove it from the quantum circuit.</p>\n                    </div>\n                    <div class=\"row align-items-center\" *ngIf=\"!dragged\">\n                        <div class=\"col-1 mb-2\" *ngFor=\"let item of importantGatesList\">\n                            <div class=\"gate\" id=\"{{item.name}}\" cdkDrag>\n                                {{item.name}}\n                            </div>\n                        </div>\n                    </div>\n                    \n                </div>\n\n                \n            </div>\n\n            <mat-divider class=\"w-100 mb-3 mt-3\"></mat-divider>\n         \n            <div id=\"circuit\" class=\"circuit\">\n                <div *ngFor=\"let line of lineList\" class=\"connector\" [ngStyle]=\"setStyle(line)\"></div>\n                <div *ngFor=\"let qubit of data.qubitNames; index as qubitIndex\">                    \n                    <div class=\"row\" *ngIf=\"data.operationsAtBit[qubitIndex].length > 0\">\n                        <div class=\"custom-container\">\n                            <div class=\"qubitName\">\n                                |{{qubit}}>\n                            </div>\n                            <div [id]=\"qubit\" cdkDropList cdkDropListOrientation=\"horizontal\"  #gateList=\"cdkDropList\"\n                                [cdkDropListData]=\"data.operationsAtBit[qubitIndex]\" class=\"list\"\n                                (cdkDropListDropped)=\"drop($event)\">\n                                <div class=\"placeholder\"\n                                    *ngFor=\"let operationIndex of data.operationsAtBit[qubitIndex]; index as index\">\n                                    <div id=\"{{qubitIndex}}-{{index}}\" class=\"box\" cdkDrag (cdkDragStarted)=\"dragStarted()\" (cdkDragEnded)=\"dragEnded()\"\n                                        (mouseenter)=\"onMouseEnter(operationIndex)\" (mouseleave)=\"onMouseLeave()\"\n                                        *ngIf=\"(!operationIndex.placeholder && !operationIndex.control)\"\n                                        matTooltip=\"{{getTooltip(operationIndex)}}\">\n                                        <mat-icon class=\"editBox\" color=\"primary\" (click)=\"edit(operationIndex)\">edit\n                                        </mat-icon>\n                                        {{operationIndex.operation.name}}\n                                    </div>\n                                    <div class=\"box emptyBox\" cdkDrag *ngIf=\"operationIndex.placeholder\">\n                                    </div>\n                                    <div id=\"{{qubitIndex}}-{{index}}\" class=\"box\" *ngIf=\"operationIndex.control\" (cdkDragStarted)=\"dragStarted()\" (cdkDragEnded)=\"dragEnded()\"\n                                        cdkDrag (mouseenter)=\"onMouseEnter(operationIndex)\"\n                                        (mouseleave)=\"onMouseLeave()\" matTooltip=\"{{getTooltip(operationIndex)}}\">\n                                        <mat-icon class=\"editBox\" color=\"primary\" (click)=\"edit(operationIndex)\">edit\n                                        </mat-icon>\n                                        <div class=\"controlBox\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <mat-divider class=\"w-100 mb-3 mt-3\" *ngIf=\"data.clbitNames.length > 0\"></mat-divider>\n\n                <div *ngFor=\"let clbit of data.clbitNames; index as clbitIndex\">\n                    <div class=\"row\">\n                        <div class=\"custom-container\">\n                            <div class=\"qubitName\">\n                                {{clbit}}\n                            </div>\n                            <div id=\"{{clbitIndex + data.qubitNames.length}}\" cdkDropList\n                                cdkDropListOrientation=\"horizontal\" #clbitList=\"cdkDropList\"\n                                [cdkDropListData]=\"data.operationsAtBit[clbitIndex + data.qubitNames.length]\"\n                                class=\"list\" (cdkDropListDropped)=\"drop($event)\">\n                                <div class=\"placeholder\"\n                                    *ngFor=\"let operationIndex of data.operationsAtBit[clbitIndex + data.qubitNames.length]; index as index\">\n                                    <!-- usual operation -->\n                                    <div id=\"{{clbitIndex + data.qubitNames.length}}-{{index}}\" class=\"box\" cdkDrag (cdkDragStarted)=\"dragStarted()\" (cdkDragEnded)=\"dragEnded()\"\n                                        (mouseenter)=\"onMouseEnter(operationIndex)\" (mouseleave)=\"onMouseLeave()\"\n                                        *ngIf=\"(!operationIndex.placeholder && !operationIndex.control)\"\n                                        matTooltip=\"{{getTooltip(operationIndex)}}\">\n                                        <mat-icon class=\"editBox\" color=\"primary\" (click)=\"edit(operationIndex)\">edit\n                                        </mat-icon>\n                                        {{operationIndex.operation.name}}\n                                    </div>\n                                    <!-- empty operation -->\n                                    <div class=\"box emptyBox\" cdkDrag *ngIf=\"operationIndex.placeholder && (!operationIndex.placeholder && !operationIndex.control)\" >\n                                    </div>     \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"isGateSelected\">\n                <mat-divider class=\"w-100 mb-3 mt-3\"></mat-divider>\n                <app-gate-edit [gate]=\"selectedGate\"></app-gate-edit>\n            </div>\n\n\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { InputComponent } from '../input/input.component';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-import',\n  templateUrl: './import.component.html',\n  styleUrls: ['./import.component.scss'],\n})\nexport class ImportComponent implements OnInit {\n  @ViewChild(InputComponent) child: InputComponent;\n  constructor(public data: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n  async computeInternal() {\n    this.child.computeInternal()\n  }\n\n}\n","<div class=\"container pt-2\">\n    <div class=\"row pt-2\">\n        <div class=\"col\">\n            <mat-form-field class=\"w-100\">\n                <mat-label> Choose Input</mat-label>\n                <mat-select (selectionChange)=\"this.data.changedInput($event)\">\n                    <p class=\"pl-2 pt-2 selectionTitle\">Languages</p>\n                    <mat-option value=\"OpenQASM\">\n                        OpenQASM\n                    </mat-option>\n                    <mat-option value=\"Quil\">\n                        Quil\n                    </mat-option>\n                    <mat-divider></mat-divider>\n                    <p class=\"pl-2 pt-2 selectionTitle\">Frameworks</p>\n                    <mat-option\n                        matTooltip=\"Name of the circuit must be qc. All occurences can be changed with CTRL + F2.\"\n                        matTooltipClass=\"tooltip-large\" value=\"Qiskit\">\n                        Qiskit\n                    </mat-option>\n                    <mat-option\n                        matTooltip=\"Name of the program must be p. All occurences can be changed with CTRL + F2.\"\n                        matTooltipClass=\"tooltip-large\" value=\"Pyquil\">\n                        Pyquil\n                    </mat-option>\n\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"col text-center\">\n            <button (click)=\"computeInternal()\" mat-mini-fab matTooltip=\"Import Circuit.\"\n                matTooltipClass=\"tooltip-large\" color=\"primary\">\n                <mat-icon>forward</mat-icon>\n            </button>\n        </div>\n        <div class=\"col\"></div>\n    </div>\n</div>\n\n<div class=\"container-fluid pt-2\">\n    <div class=\"row\">        \n        <div class=\"col content-left\">\n            <app-input compute=\"circuit_to_internal\"></app-input>\n        </div>\n\n        <div class=\"col\">\n            <app-code circuitRef='internal'></app-code>\n        </div>\n    </div>\n</div>\n<mat-divider [vertical]=\"true\"></mat-divider>","import { Component, OnInit, ViewEncapsulation, ViewChild, Input } from '@angular/core';\nimport { MatSelectChange } from '@angular/material/select';\nimport { HttpService } from '../services/http.service';\nimport { DataService } from '../services/data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class InputComponent implements OnInit {\n  @Input() compute: string;\n  convert: boolean = false;\n  \n  constructor(private http: HttpService, private data: DataService, private snackbar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    if (this.compute === \"convert\") {\n      this.convert = true;\n    } else {\n      this.convert = false;\n    }\n  }\n\n  inputFile() {\n    document.getElementById('fileInput').addEventListener('change', this.readFile.bind(this), false);\n    document.getElementById('fileInput').click()\n  }\n\n  readFile(event: any) {\n    let file = event.target.files[0]; // FileList object\n    console.log(file)\n\n    let extension = file.name.split('.').pop()\n    console.log(extension)\n\n    const reader = new FileReader();\n    reader.onload = function fileReadCompleted() {\n      // when the reader is done, the content is in reader.result.\n      this.data.setCircuit(\"import\", reader.result);\n    }.bind(this);\n\n    reader.readAsText(file);\n  }\n\n  async computeInternal() {\n    if (!(this.data.options.includes(this.data.inputFormat))) {\n      this.snackbar.open(\"You must choose an input language/framework.\");\n      return\n    }\n\n    let object = {\n      \"option\": this.data.inputFormat,\n      \"circuit\": this.data.circuits[\"import\"]\n    }\n    if (this.convert) {\n      if (this.data.exportFormat === \"\") {\n        this.snackbar.open(\"You must choose an output language/framework.\");\n      return\n\n      }\n      object[\"optionOutput\"] = this.data.exportFormat;\n    }\n    let circuit = await this.http.callBackend(object, this.compute)\n    if (circuit) {\n      let index: string;\n      if (this.convert) {\n        index = \"export\";\n      } else {\n        index = \"internal\";\n      }\n      this.data.setCircuit(index, circuit)      \n    }    \n  }\n}\n","<div class=\"container\">\n    <div class=\"row float-left pr-2\">\n        <input id=\"fileInput\" type=\"file\" />\n        <button (click)=\"inputFile()\" mat-mini-fab class=\"\" matTooltip=\"Import File.\" matTooltipClass=\"tooltip-large\"\n            color=\"primary\">\n            <mat-icon>publish</mat-icon>\n        </button>\n    </div>\n    <div class=\"row exportCode pr-4\">\n        <app-code circuitRef='import'></app-code>\n    </div>\n</div>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DataService } from '../services/data.service';\nimport { Observable } from 'rxjs';\nimport { saveAs } from \"file-saver\";\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-output',\n  templateUrl: './output.component.html',\n  styleUrls: ['./output.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class OutputComponent implements OnInit {  \n  constructor(public data: DataService, private snackbar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  download() {\n    if (this.data.circuits[2] === \"\") {\n      this.snackbar.open(\"Circuit is empty.\");\n      return;\n    }\n    let format = \"\";\n    if (this.data.exportFormat == \"Quil\") {\n      format = \"quil\"\n    } else if (this.data.exportFormat == \"OpenQASM\") {\n      format = \"qasm\"\n    } else if (this.data.exportFormat == \"Pyquil\") {\n      format = \"py\"\n    } else if (this.data.exportFormat == \"Qiskit\") {\n      format = \"py\"\n    } else {\n      this.snackbar.open(\"No valid format selected.\");\n      return;\n    }\n    var blob = new Blob([this.data.circuits[\"export\"]], {type: \"text/plain;charset=utf-8\"});\n    saveAs(blob, \"circuit.\" + format);\n  }\n}\n","\n<div class=\"row float-right pr-2\">\n    <button (click)=\"download()\" mat-mini-fab class=\"float-right\"\n            matTooltip=\"Download Circuit.\" matTooltipClass=\"tooltip-large\"\n            color=\"primary\">\n            <mat-icon>system_update</mat-icon>\n        </button>\n</div>\n<div class=\"row exportCode pr-4\">\n    <app-code class=\"pt-2\" circuitRef='export'></app-code>\n    \n</div>","export class Operation {\n    name: string;\n    numberOfParameter: number;\n    numberOfQubits: number;\n    numberOfClbits: number;\n    numberOfCtrlBits: number;\n\n    constructor(name, numberOfQubits = 1, numberOfParameter = 0, numberOfClbits = 0, numberOfCtrlBits = 0) {\n        this.name = name;\n        this.numberOfParameter = numberOfParameter;\n        this.numberOfQubits = numberOfQubits;\n        this.numberOfClbits = numberOfClbits;\n        this.numberOfCtrlBits = numberOfCtrlBits;\n    }\n\n    generateList(number: number): any[] {\n        let list = []\n        for (let i = 0; i < number; i++) {\n            list.push(null)\n        }\n        return list\n    }\n}\n\n\nexport class OperationIndex {\n    placeholder: boolean;\n    control: boolean;\n    index: number;\n    operation: Operation;\n    parameter: number[];\n    qubits: number[];\n    clbits: number[];\n    lineNumbersInCircuit: number[];    \n\n    constructor(index, operation, parameter, qubits, clbits, lineNumbersInCircuit, placeholder = false, control = false) {\n        this.index = index;\n        this.operation = operation;\n        this.parameter = parameter;\n        this.qubits = qubits;\n        this.clbits = clbits;\n        this.lineNumbersInCircuit = lineNumbersInCircuit;\n        this.placeholder = placeholder;\n        this.control = control;    \n    }\n}\n\n// gates\nconst H = new Operation(\"H\")\nconst I = new Operation(\"I\")\nconst S = new Operation(\"S\")\nconst SX = new Operation(\"SX\")\nconst SXDG = new Operation(\"SXDG\")\nconst SDG = new Operation(\"SDG\")\nconst T = new Operation(\"T\")\nconst TDG = new Operation(\"TDG\")\nconst U = new Operation(\"U\", 1, 3)\nconst U1 = new Operation(\"U1\", 1, 1)\nconst U2 = new Operation(\"U2\", 1, 2)\nconst U3 = new Operation(\"U3\", 1, 3)\nconst X = new Operation(\"X\")\nconst Y = new Operation(\"Y\")\nconst Z = new Operation(\"Z\")\n\nconst CCX = new Operation(\"CCX\", 3, 0, 0, 2)\nconst C3X = new Operation(\"C3X\", 4, 0, 0, 3)\nconst C4X = new Operation(\"C4X\", 5, 0, 0, 2)\nconst DCX = new Operation(\"DCX\", 2, 0, 0, 0)\nconst CH = new Operation(\"CH\", 2, 0, 0, 1)\nconst CPHASE = new Operation(\"CPHASE\", 2, 1, 0, 1)\nconst CRX = new Operation(\"CRX\", 2, 1, 0, 1)\nconst CRY = new Operation(\"CRY\", 2, 1, 0, 1)\nconst CRZ = new Operation(\"CRZ\", 2, 1, 0, 1)\nconst CSWAP = new Operation(\"CSWAP\", 3, 0, 0, 1)\nconst CSX = new Operation(\"CSX\", 2, 0, 0, 1)\nconst CU = new Operation(\"CU\", 2, 4, 0, 1)\nconst CU1 = new Operation(\"CU1\", 2, 1, 0, 1)\nconst CU3 = new Operation(\"CU3\", 2, 3, 0, 1)\nconst CX = new Operation(\"CX\", 2, 0, 0, 1)\nconst CY = new Operation(\"CY\", 2, 0, 0, 1)\nconst CZ = new Operation(\"CZ\", 2, 0, 0, 1)\nconst MS = new Operation(\"MS\", 2, 0, 0, 0)\nconst PHASE = new Operation(\"PHASE\", 1, 1, 0, 0)\nconst RCCX = new Operation(\"RCCX\", 3, 0, 0, 2)\nconst RC3X = new Operation(\"RC3X\", 4, 0, 0, 3)\nconst RX = new Operation(\"RCCX\", 1, 1, 0, 0)\nconst RXX = new Operation(\"RXX\", 2, 1, 0, 0)\nconst RY = new Operation(\"RY\", 1, 1, 0, 0)\nconst RYY = new Operation(\"RYY\", 2, 1, 0, 0)\nconst RZ = new Operation(\"RZ\", 1, 1, 0, 0)\nconst RZZ = new Operation(\"RZZ\", 2, 1, 0, 0)\nconst RZX = new Operation(\"RZZ\", 2, 1, 0, 0)\nconst SWAP = new Operation(\"SWAP\", 2, 0, 0, 0)\nconst ISWAP = new Operation(\"ISWAP\", 2, 0, 0, 0)\n\n\n// other instructions\nconst BARRIER = new Operation(\"Barrier\", -1)\nconst MEASURE = new Operation(\"Measure\", 1, 0, 1)\n\nlet importantGatesMap = {\n    \"h\": H,\n    \"x\": X,\n    \"y\": Y,\n    \"z\": Z,\n    \"i\": I,\n    \"s\": S,    \n    \"t\": T,      \n    \"u1\": U1,\n    \"u2\": U2,\n    \"u3\": U3,\n    \"swap\": SWAP,\n    \"rx\": RXX,\n    \"rz\": RZ,\n    \"ry\": RY,\n    \"phase\": PHASE,\n    \"cu1\": CU1,\n    \"cu3\": CU3,\n    \"cx\": CX,\n    \"cy\": CY,\n    \"cz\": CZ,\n    \"crx\": CRX,\n    \"cry\": CRY,\n    \"crz\": CRZ,\n    \"cphase\": CPHASE,    \n    \"barrier\": BARRIER,\n    \"measure\": MEASURE\n}\n\nexport let gateMap = {\n    \"u\": U,\n    \"sx\": SX,\n    \"sxdg\": SXDG,\n    \"sdg\": SDG,\n    \"tdg\": TDG,  \n    \"ccx\": CCX,\n    \"c3x\": C3X,\n    \"c4x\": C4X,\n    \"dcx\": DCX,\n    \"ch\": CH,\n    \"cswap\": CSWAP,\n    \"csx\": CSX,\n    \"cu\": CU,   \n    \"ms\": MS,\n    \"rccx\": RCCX,\n    \"rc3x\": RC3X,    \n    \"rxx\": RXX,    \n    \"ryy\": RYY,    \n    \"rzz\": RZZ,\n    \"rzx\": RZX,\n    \"iswap\": ISWAP,\n}\n\nfor (let key in importantGatesMap) {\n    gateMap[key] = importantGatesMap[key];\n} \n\nexport let importantGatesList = [];\nfor (let key in importantGatesMap) {\n    importantGatesList.push(importantGatesMap[key]);\n}\n\n","export class ConnectorAttributes {\n    yBot: number = 0;\n    yTop: number = Number.MAX_VALUE;\n    xLeft: number = 0;\n    xRight: number = 0;\n    measure: boolean = false;\n\n    constructor(measure: boolean = false){\n        this.measure = measure;\n    }\n\n    setYTop(yTop: number) {\n        if (yTop < this.yTop) {\n            this.yTop = yTop\n        }\n    }\n\n    setYBot(yBot: number) {\n        if (yBot > this.yBot) {\n            this.yBot = yBot\n        }\n    }\n\n    setXRight(xRight: number) {\n        this.xRight = xRight;\n    }\n\n    setYLeft(xLeft: number) {\n        this.xLeft = xLeft;\n    }\n\n    getWidth() {\n        return this.xRight - this.xLeft;\n    }\n\n    getHeight() {\n        return this.yBot - this.yTop;\n    }\n}\n\nexport function delay(ms: number) {\n    return new Promise( resolve => setTimeout(resolve, ms) );\n}\n\nexport function insert(arr, index, newItem) { \n    return [\n    // part of the array before the specified index\n    ...arr.slice(0, index),\n    // inserted item\n    newItem,\n    // part of the array after the specified index\n    ...arr.slice(index)\n  ]\n}","import { Injectable } from '@angular/core';\nimport { Operation, gateMap, OperationIndex } from './Operation';\nimport { MatSelectChange } from '@angular/material/select';\nimport { element } from 'protractor';\nimport { HttpService } from './http.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { insert } from './Utility';\nimport { partitionArray } from '@angular/compiler/src/util';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  public circuitChanged: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  public highlightLines: BehaviorSubject<number[]> = new BehaviorSubject([]);\n\n  public options: string[] = [\"OpenQASM\", \"Quil\", \"Qiskit\", \"Pyquil\"];\n  public inputFormat: string = \"\";\n  public exportFormat: string = \"\";\n\n  public circuits: { [id: string]: string; } = {\n    \"import\":\n      `DECLARE ro BIT[3]\nH 0\nH 1\nH 2\nH 1\nCNOT 2 3\nCPHASE (0) 1 0\nCNOT 2 4\nH 0\nCPHASE (0) 1 2\nCPHASE (0) 0 2\nH 2\nMEASURE 0 ro[0]\nMEASURE 1 ro[1]\nMEASURE 2 ro[2]\n`,\n    \"internal\": \"\",\n    \"unroll\": \"\",\n    \"export\": \"\"\n  };\n\n\n  public numQbits: number = 0;\n  public numClbits: number = 0;\n  public numBits: number = 0;\n  public qubitNames: string[] = [];\n  public clbitNames: string[] = [];\n  public bitNames: string[] = [];\n  public maxIndexTotal: number = 0;\n  public currentIndex = Array(this.numBits).fill(-1);\n\n  public operationsAtBit: OperationIndex[][] = [];\n  public firstOperationAt: number = 0;\n  public numberOfLines: number = 0;\n\n  constructor() {\n    this.parseCircuit()\n  }\n\n\n  public setCircuit(index: string, circuit: string) {\n    this.circuits[index] = circuit;\n    if (index == \"internal\") {\n      this.parseCircuit()\n    }\n  }\n\n  public setCircuitOnWrite(circuitRef: string, circuit: string) {\n    try {\n      this.setCircuit(circuitRef, circuit);\n    } catch (e) {\n      // happens when a user is changing the circuit (and data is just partly changed), but should not happen otherwise\n      console.log(\"Circuit data cannot be parsed.\")\n      // console.log(e)\n    }\n\n  }\n\n\n  parseCircuit() {\n    // temp variables\n    let numQbits = 0;\n    let numClbits = 0;\n    let numBits = 0;\n    let maxIndexTotal = 0;\n    let qubitNames = [];\n    let clbitNames = [];\n    let bitNames = [];\n    let currentIndex = Array(this.numBits).fill(-1);\n    let operationsAtBit = [];\n    let firstOperationAt = -1;\n    let circuit = this.circuits[\"internal\"]\n    let arrayOfLines = circuit.split(\"\\n\");\n    let numberOfLines = arrayOfLines.length\n    arrayOfLines.forEach((line, lineNumber) => {\n      if (line.includes(\"QuantumCircuit\")) {\n        let afterBracket = line.split(\"(\")[1].replace(\")\", \"\");\n        let numbers = afterBracket.split(\",\")\n        numQbits = parseInt(numbers[0].trim())\n        if (numbers.length > 1) {\n          numClbits = parseInt(numbers[1].trim())\n        }\n        // TODO handle imports via registers\n        for (let i = 0; i < numQbits; i++) {\n          qubitNames.push(i)\n        }\n\n        for (let i = 0; i < numClbits; i++) {\n          clbitNames.push(i)\n        }\n        bitNames = qubitNames.concat(clbitNames)\n        numBits = numQbits + numClbits;\n\n        for (let i = 0; i < numBits; i++) {\n          operationsAtBit.push([]);\n        }\n\n      } else if (line.includes(\"qc.\")) {\n        if (firstOperationAt == -1) {\n          firstOperationAt = lineNumber;\n        }\n        let lineTrimmed = line.replace(/qc./g, \"\").trim();\n        let lineSplitted = lineTrimmed.split(\"(\");\n        let operationString = lineSplitted[0];\n        let parameters = lineSplitted[1].replace(\")\", \"\").split(\",\");\n        let operation: Operation = gateMap[operationString];\n\n        let paramsWithoutBits = []\n        let qubits = []\n        let clbits = []\n        for (let i = 0; i < operation.numberOfParameter; i++) {\n          paramsWithoutBits.push(parameters[i].trim())\n        }\n        for (let i = operation.numberOfParameter; i < (operation.numberOfParameter + operation.numberOfQubits); i++) {\n          qubits.push(parseInt(parameters[i].trim()))\n        }\n        for (let i = operation.numberOfParameter + operation.numberOfQubits; i < (operation.numberOfParameter + operation.numberOfQubits + operation.numberOfClbits); i++) {\n          clbits.push(parseInt(parameters[i].trim()))\n        }\n\n        // compute max index\n        let maxIndex = 0;\n        qubits.forEach(qubit => {\n          if (currentIndex[qubit] > maxIndex) {\n            maxIndex = currentIndex[qubit]\n          }\n        })\n        clbits.forEach(clbit => {\n          if (currentIndex[clbit + qubitNames.length] > maxIndex) {\n            maxIndex = currentIndex[clbit + qubitNames.length]\n          }\n        })\n        let lastIndex = maxIndex;\n        maxIndex += 1;\n        if (maxIndex > maxIndexTotal) {\n          maxIndexTotal = maxIndex;\n        }\n        \n        let lineNumbers = [lineNumber]\n        let operationIndex = new OperationIndex(maxIndex, operation, paramsWithoutBits, qubits, clbits, lineNumbers)\n        let operationIndexControl = new OperationIndex(maxIndex, operation, paramsWithoutBits, qubits, clbits, lineNumbers, false, true)\n        let placeholder = new OperationIndex(maxIndex, operation, paramsWithoutBits, qubits, clbits, lineNumbers, true)\n        // fill operations at index\n        let numCtrlBits = operation.numberOfCtrlBits;\n\n        if (operation.name == \"Barrier\") {\n          for (let i = 0; i < bitNames.length; i++) {\n            this.fillPlaceholders(maxIndexTotal - 1, i, operationsAtBit, placeholder)\n            operationsAtBit[i][maxIndexTotal] = operationIndex;\n            currentIndex[maxIndexTotal + 1]\n          }\n          maxIndexTotal++;\n          return;\n        }\n\n        // set max index in arrays\n        qubits.forEach(qubit => {\n          currentIndex[qubit] = maxIndex\n        })\n        clbits.forEach(clbit => {\n          currentIndex[clbit + qubitNames.length] = maxIndex\n        })\n\n        qubits.forEach((qubit, index) => {\n          this.fillPlaceholders(lastIndex, qubit, operationsAtBit, placeholder)\n          // control qubit\n          if (numCtrlBits > index) {\n            operationsAtBit[qubit][lastIndex] = operationIndexControl;\n            // target qubit\n          } else {\n            operationsAtBit[qubit][lastIndex] = operationIndex;\n          }\n        })\n\n        clbits.forEach((clbit, index) => {\n          clbit = clbit + qubitNames.length\n          this.fillPlaceholders(lastIndex, clbit, operationsAtBit, placeholder)\n          operationsAtBit[clbit][lastIndex] = operationIndex;\n        })\n\n\n      }\n    })\n    // at the end if parsing errors occur, the data is not written partly\n    this.numQbits = numQbits;\n    this.numClbits = numClbits;\n    this.numBits = numBits;\n    this.maxIndexTotal = maxIndexTotal;\n    this.qubitNames = qubitNames;\n    this.clbitNames = clbitNames;\n    this.bitNames = bitNames;\n    this.currentIndex = currentIndex;\n    this.operationsAtBit = operationsAtBit;\n    this.firstOperationAt = firstOperationAt;\n    this.numberOfLines = numberOfLines;\n\n    // fire event to notify components\n    this.circuitChanged.next(true);\n  }\n\n  private fillPlaceholders(lastIndex: number, bit: number, operationsAtBit: any[], placeholder: OperationIndex) {\n    if (lastIndex > operationsAtBit[bit].length - 1) {\n      for (let i = operationsAtBit[bit].length; i <= lastIndex; i++) {\n        operationsAtBit[bit].push(placeholder)\n      }\n    }\n  }\n\n\n  removeOperationAtIndex(index: number, qubitIndex: number) {\n    let operationIndex = this.operationsAtBit[qubitIndex][index];\n    this.removeOperation(operationIndex);\n  }\n\n  removeOperation(operationIndex: OperationIndex) {\n    let lineNumbers = operationIndex.lineNumbersInCircuit;\n    let lines = this.circuits[\"internal\"].split('\\n');\n    lineNumbers.forEach(lineNumber => {\n      lines.splice(lineNumber, 1);\n    })\n    this.circuits[\"internal\"] = lines.join('\\n');\n    this.parseCircuit()\n\n  }\n\n  addOperationIndex(operationIndex: OperationIndex) {\n    let lines = this.circuits[\"internal\"].split('\\n');\n    let lineToInsert: number = operationIndex.lineNumbersInCircuit[0];\n    lines.splice(lineToInsert, 0, `qc.${operationIndex.operation.name.toLowerCase()}(${this.generateStringFromArguments(operationIndex)})`);\n    this.circuits[\"internal\"] = lines.join('\\n');\n    this.parseCircuit()\n  }\n\n  public getLinesToInsert(index: number, qubitIndex: number): number {\n    let lineToInsert: number = this.firstOperationAt;\n    if (index < this.operationsAtBit[qubitIndex].length) {\n      let lineNumbersInCircuit = this.operationsAtBit[qubitIndex][index].lineNumbersInCircuit\n      lineToInsert = lineNumbersInCircuit[0]\n\n    } else {\n      lineToInsert = this.numberOfLines\n    }\n    return lineToInsert\n  }\n\n  public getLinesToInsertEvent(previousIndex: number, index: number, qubitIndex: number): number {\n    let lineToInsert: number = this.firstOperationAt;\n    if (index < this.operationsAtBit[qubitIndex].length) {\n      let lineNumbersInCircuit = this.operationsAtBit[qubitIndex][index].lineNumbersInCircuit\n      lineToInsert = lineNumbersInCircuit[0];\n      // needed, because element should be placed after the existing element\n      if (previousIndex < index) {\n        lineToInsert = lineNumbersInCircuit[lineNumbersInCircuit.length - 1] + 1\n      }\n    } else {\n      lineToInsert = this.numberOfLines\n    }\n    return lineToInsert\n  }\n\n  public editOperation(operationIndex: OperationIndex, linesToRemove: number[]) {\n    let lines = this.circuits[\"internal\"].split('\\n');\n    lines = this.editOperationLines(lines, operationIndex, linesToRemove)\n    this.circuits[\"internal\"] = lines.join('\\n');\n    this.parseCircuit()\n  }\n\n  private editOperationLines(lines: string[], operationIndex: OperationIndex, linesToRemove: number[]): string[] {\n    let lineToInsert: number = operationIndex.lineNumbersInCircuit[0];\n\n    // remove old lines\n    if (linesToRemove) {\n      linesToRemove.forEach(lineNumber => {\n        lines.splice(lineNumber, 1);\n      })\n      if (linesToRemove[0] < lineToInsert) {\n        lineToInsert -= linesToRemove.length\n      }\n      // add line\n      lines.splice(lineToInsert, 0, `qc.${operationIndex.operation.name.toLowerCase()}(${this.generateStringFromArguments(operationIndex)})`);\n      // otherwise just edit the old line\n    } else {\n      lines[lineToInsert] = `qc.${operationIndex.operation.name.toLowerCase()}(${this.generateStringFromArguments(operationIndex)})`;\n    }\n    return lines;\n  }\n\n\n  private generateStringFromArguments(operationIndex: OperationIndex): string {\n    // barrier is applied to all qubits\n    if (operationIndex.operation.name == \"Barrier\") {\n      return \"\";\n    }\n\n    let string = \"\";\n    string += this.listToString(operationIndex.parameter)\n    let nextString = this.listToString(operationIndex.qubits)\n    if (string != \"\" && nextString != \"\") {\n      string += \", \"\n    }\n    string += nextString;\n\n    nextString = this.listToString(operationIndex.clbits)\n    if (string != \"\" && nextString != \"\") {\n      string += \", \"\n    }\n    string += nextString;\n\n    return string;\n  }\n\n  private listToString(list: any[]): string {\n    let string: string = \"\";\n    for (let i = 0; i < list.length; i++) {\n      if (i < list.length - 1) {\n        string += list[i] + \", \"\n      } else {\n        string += list[i]\n      }\n    }\n    return string;\n  }\n\n\n  setMaxIndex() {\n    let max = -1;\n    this.currentIndex.forEach(index => {\n      if (index > max) {\n        max = index;\n      }\n    })\n    this.maxIndexTotal = max;\n  }\n\n  setExportCircuit(circuit: string, format: string) {\n    this.setCircuit(\"export\", circuit);\n    this.exportFormat = format;\n  }\n\n  getCircuit(circuitRef: string) {\n    if (circuitRef == \"current\") {\n      if (this.circuits[\"unroll\"] != \"\") {\n        return this.circuits[\"unroll\"];\n      }\n      return this.circuits[\"internal\"];\n    }\n    return this.circuits[circuitRef]\n\n  }\n\n  public changedInput(event: MatSelectChange) {\n    this.inputFormat = event.value;\n  }\n\n  public changedExport(event: MatSelectChange) {\n    this.exportFormat = event.value;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { environment } from './../../environments/environment';\n\nconst url = environment.apiUrl\n\n// const httpOptions = {\n//   headers: new HttpHeaders({\n//     'Content-Type':  'application/json',\n//   }),\n//   responseType: 'text' as 'text'\n// };\nconst headers = new HttpHeaders({\n  'Content-Type': 'application/json',\n})\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient, private snackbar: MatSnackBar) { }\n\n  async callBackend(data: {}, path: string) {\n    let dataJSON = JSON.stringify(data)\n    try {\n      let circuit = await this.http.post(url + path, dataJSON, { headers, responseType: 'text' }).toPromise()\n      this.snackbar.open(\"Successfully processed the data.\");\n      return circuit\n    } catch (err) {\n      console.log(err)\n      console.log(\"Backend error:\" +  err.error)\n      this.snackbar.open(\"Error at handling the data. The log shows detailed information about this error.\");\n    }\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../services/http.service';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-simulate',\n  templateUrl: './simulate.component.html',\n  styleUrls: ['./simulate.component.scss']\n})\nexport class SimulateComponent implements OnInit {\n  public counts = [];\n\n  // chart attributes\n  public chartType: string = 'bar';\n  public chartDatasets: Array<any> = [];\n\n  public chartLabels: Array<any> = [];\n  public chartColors: Array<any> = [\n    {\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)'\n      ],\n      borderColor: [\n        'rgba(255,99,132,1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)'\n      ],\n      borderWidth: 2,\n    }\n  ];\n  public chartOptions: any = {\n    responsive: true,\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }],\n      xAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  };\n  public chartClicked(e: any): void { }\n  public chartHovered(e: any): void { }\n\n  constructor(private http: HttpService, private data: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n  async simulate() {\n    let object = {\n      \"circuit\": this.data.getCircuit(\"internal\")\n    }\n    let counts: string = await this.http.callBackend(object, \"simulate\")\n    let countObject = JSON.parse(counts)\n    // countObject = this.appendCounts(countObject)\n    if (countObject) {\n      this.counts.push(countObject);\n      let chartData = [];\n      let chartLabels = [];\n      for (let key in countObject) {\n        let value = countObject[key];\n\n        if (!(key in this.chartLabels)) {\n          chartLabels.push(key);\n        }\n        chartData.push(value)\n\n      }\n      this.chartDatasets = [{\n        data: chartData,\n        label: \"Counts\"\n      }];\n      this.chartLabels = chartLabels;\n\n      // this.bottomDiv.nativeElement.scrollIntoView({ block: 'end',  behavior: 'smooth' });\n    }\n  }  \n\n}\n","<div class=\"container-fluid\" class=\"tab-content\">\n    <div class=\"chart\" *ngIf=\"counts.length != 0\">\n        <mat-divider class=\"mt-3\"></mat-divider>\n        <div class=\"row pt-3\">\n            <div style=\"display: block\">\n                <canvas mdbChart [chartType]=\"chartType\" [datasets]=\"chartDatasets\" [labels]=\"chartLabels\"\n                    [colors]=\"chartColors\" [options]=\"chartOptions\" [legend]=\"true\"\n                    (chartHover)=\"chartHovered($event)\" (chartClick)=\"chartClicked($event)\">\n                </canvas>\n            </div>\n        </div>\n        <button mat-raised-button class=\"mt-1 w-100 pt-1 pb-1\" (click)=\"simulate()\"><mat-icon>redo</mat-icon>Recompute</button>\n    </div>\n    \n\n</div>\n\n\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AnalyzeComponent } from '../analyze/analyze.component';\n\n@Component({\n  selector: 'app-stepper',\n  templateUrl: './stepper.component.html',\n  styleUrls: ['./stepper.component.scss'],\n})\nexport class StepperComponent implements OnInit {\n  @ViewChild('analyze', {static: false}) analyzeComponent: AnalyzeComponent;\n\n  firstFormGroup: FormGroup;\n\n  constructor(private snackbar: MatSnackBar, private _formBuilder: FormBuilder) {\n    \n  }\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    \n  }\n\n  onStepChange(event: any) {\n    let index = event.selectedIndex;\n    if (index == 2) {\n      this.showInformation()\n      this.analyzeComponent.analyse();\n    }\n  }\n\n  showInformation() {\n    this.snackbar.open(\"Request sent to backend. Results will be available shortly.\");\n  } \n}\n","<div class=\"container-fluid\">\n  <mat-horizontal-stepper  #stepper (selectionChange)=\"onStepChange($event)\">\n    <mat-step [stepControl]=\"firstFormGroup\" state=\"input\">\n      <ng-template matStepLabel>Import</ng-template>\n      <app-import></app-import>\n    </mat-step>\n    <mat-step [stepControl]=\"firstFormGroup\" state=\"circuit\">\n      <ng-template matStepLabel>Visualize and Edit </ng-template>\n      <app-circuit></app-circuit>\n    </mat-step>\n    <mat-step [stepControl]=\"firstFormGroup\" state=\"circuit\">\n      <ng-template matStepLabel>Transpile and Export</ng-template>\n      <app-analyze #analyze></app-analyze>\n    </mat-step>\n  </mat-horizontal-stepper>\n</div>\n\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { SimulateComponent } from '../simulate/simulate.component';\nimport { AnalyzeComponent } from '../analyze/analyze.component';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-tab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.scss']\n})\nexport class TabComponent implements OnInit {\n  @ViewChild(\"simulate\", {static: false}) simulateComponent: SimulateComponent;\n  @ViewChild('analyze', {static: false}) analyzeComponent: AnalyzeComponent;\n\n\n  constructor(private snackbar: MatSnackBar, private data: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n  tabClick(event: MatTabChangeEvent) {\n    let index = event.index;\n    if (index == 1) {\n      this.showInformation();\n      this.simulateComponent.simulate();\n    } else if (index == 2) {\n      this.showInformation();\n      this.analyzeComponent.analyse();\n    }\n  }\n\n  showInformation() {\n    this.snackbar.open(\"Request sent to backend. Results will be available shortly.\");\n  } \n  \n\n}\n","<mat-tab-group mat-align-tabs=\"center\" mat-stretch-tabs (selectedTabChange)=\"tabClick($event)\">\n    <mat-tab label=\"Graphical Representation\">\n        <ng-template mat-tab-label class=\"pb-3\">\n            <mat-icon class=\"tab-icon\">view_list</mat-icon>\n            Graphical Representation\n        </ng-template>\n        <app-graphical class=\"tab-content\"></app-graphical>\n    </mat-tab>\n\n    <mat-tab label=\"Simulate\">\n        <ng-template mat-tab-label>\n            <mat-icon class=\"tab-icon\" >memory</mat-icon>\n            Simulate\n        </ng-template>\n        <app-simulate #simulate class=\"tab-content\"></app-simulate>\n    </mat-tab>\n    <!-- <mat-tab label=\"Circuit Depth Analysis\">\n        <ng-template mat-tab-label>\n            <mat-icon class=\"tab-icon\">analytics</mat-icon>\n            Circuit Depth Analysis\n        </ng-template>\n        <app-analyze #analyze class=\"tab-content\"></app-analyze>\n    </mat-tab> -->\n</mat-tab-group>","import { Component, OnInit } from '@angular/core';\nimport { gateMap } from '../services/Operation';\nimport { ViewEncapsulation } from '@angular/core';\nimport { HttpService } from '../services/http.service';\nimport { DataService } from '../services/data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-unroll',\n  templateUrl: './unroll.component.html',\n  styleUrls: ['./unroll.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class UnrollComponent implements OnInit {\n  selectedGates = [];\n  gateMap = gateMap;\n  chooseRigetti = false;\n  chooseIBMQ = false;\n  chooseNative = false;\n\n  constructor(private http: HttpService, private data: DataService, private snackbar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  deselect() {\n    this.chooseIBMQ = false;\n    this.chooseRigetti = false;\n    this.chooseNative = false;\n\n  }\n\n  async unroll() {\n    if (!(this.chooseIBMQ || this.chooseNative || this.chooseRigetti)) {\n      this.snackbar.open(\"You must choose to which gates the circuit should be unrolled to.\");\n      return\n    }\n    let option = \"\"\n    if (this.chooseIBMQ) {\n      option = \"IBMQ\"\n    } else if (this.chooseNative) {\n      option = \"Custom\"\n    } else if (this.chooseRigetti) {\n      option = \"Rigetti\"\n    }\n\n    let object = {\n      \"option\": option,\n      \"circuit\": this.data.circuits[\"internal\"],\n      \"nativeGates\": this.selectedGates\n    }\n\n    let circuit = await this.http.callBackend(object, \"unroll\")\n    if (circuit) {\n      this.data.setCircuit(\"unroll\", circuit)\n    }\n  }\n\n}\n","<div class=\"container pt-2\">\n    <div class=\"row text-center d-flex justify-content-center\">\n        <div class=\"col-4 d-flex justify-content-center text-center\">\n            <mat-checkbox [(ngModel)]=\"chooseRigetti\" (click)=\"deselect()\">Unroll to native Rigetti gates.</mat-checkbox>\n        </div>\n        <div class=\"col-4 d-flex justify-content-center text-center\">\n            <mat-checkbox [(ngModel)]=\"chooseIBMQ\" (click)=\"deselect()\">Unroll to native IBMQ Experience gates.</mat-checkbox>\n        </div>\n        <div class=\"col-4 d-flex justify-content-center text-center\">\n            <div class=\"row\">\n                <div class=\"col\">\n                    <mat-checkbox [(ngModel)]=\"chooseNative\" (click)=\"deselect()\">Choose native gates.</mat-checkbox>\n                </div>\n                <div class=\"col\" *ngIf=\"chooseNative\">\n                    <mat-form-field appearance=\"fill\" class=\"multipleSelect\">\n                        <mat-label>Gates</mat-label>\n                        <mat-select multiple>\n                            <mat-option *ngFor=\"let item of gateMap | keyvalue\" [value]=\"item.key\" (value)=\"selectedGates\">{{item.key}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            \n            \n        </div>\n    </div>\n    <div class=\"row text-center d-flex justify-content-center pt-2\">\n        <button (click)=\"unroll()\" mat-mini-fab class=\"float-right\" matTooltip=\"Unroll Circuit.\"\n                matTooltipClass=\"tooltip-large\" color=\"primary\">\n                <mat-icon>forward</mat-icon>\n            </button>\n    </div>\n</div>\n\n<div class=\"container-fluid pt-4\">\n    <div class=\"row\">\n        <div class=\"col content-left\">\n            <app-code circuitRef='internal'></app-code>\n        </div>\n\n        <div class=\"col\">\n            <app-code circuitRef='unroll'></app-code>\n        </div>\n    </div>\n</div>\n<mat-divider [vertical]=\"true\"></mat-divider>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"http://localhost:5000/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}